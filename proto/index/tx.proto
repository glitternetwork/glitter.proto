syntax = "proto3";
package blockved.glitterchain.index;

// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/blockved/glitter-chain/x/index/types";
import "gogoproto/gogo.proto";
import "index/sql_engine.proto";

service Msg {
    rpc ManageSchema(MsgSchema) returns  (MsgSchemaResponse);

    rpc ManageDoc(MsgDoc) returns  (MsgDocResponse);

    rpc SQLExec(SQLExecRequest) returns (SQLExecResponse);

    rpc SQLGrant(SQLGrantRequest) returns (SQLGrantResponse);
}


message MsgSchema {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string owner_address  = 1 [(gogoproto.moretags) = "yaml:\"owner_address\""];
  string schema_name    = 2 [(gogoproto.moretags) = "yaml:\"schema_name\""];
  string body           = 3 [(gogoproto.moretags) = "yaml:\"body\""];
}
message  MsgSchemaResponse{}


message MsgDoc {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string owner_address  = 1 [(gogoproto.moretags) = "yaml:\"owner_address\""];
  string schema_name    = 2 [(gogoproto.moretags) = "yaml:\"schema_name\""];
  string body           = 3 [(gogoproto.moretags) = "yaml:\"body\""];
}
message  MsgDocResponse{}

message SQLExecRequest{
  string uid = 1;
  string sql = 2;
  repeated Argument arguments = 3;
}

message SQLExecResponse{
    repeated ResultSet results = 1;
    float took_times = 2;
}

message SQLGrantRequest{
  string uid = 1;
  string onTable = 2;
  string toUID = 3;
  string role = 4;
  string onDatabase = 5;
}

message SQLGrantResponse{
}