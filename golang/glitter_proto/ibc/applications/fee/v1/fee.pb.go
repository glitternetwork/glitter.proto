// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0-devel
// 	protoc        v3.14.0
// source: ibc/applications/fee/v1/fee.proto

package types

import (
	types "github.com/cosmos/cosmos-sdk/types"
	types1 "github.com/cosmos/ibc-go/v3/modules/core/04-channel/types"
	_ "github.com/gogo/protobuf/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Fee defines the ICS29 receive, acknowledgement and timeout fees
type Fee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the packet receive fee
	RecvFee []*types.Coin `protobuf:"bytes,1,rep,name=recv_fee,json=recvFee,proto3" json:"recv_fee,omitempty"`
	// the packet acknowledgement fee
	AckFee []*types.Coin `protobuf:"bytes,2,rep,name=ack_fee,json=ackFee,proto3" json:"ack_fee,omitempty"`
	// the packet timeout fee
	TimeoutFee []*types.Coin `protobuf:"bytes,3,rep,name=timeout_fee,json=timeoutFee,proto3" json:"timeout_fee,omitempty"`
}

func (x *Fee) Reset() {
	*x = Fee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_applications_fee_v1_fee_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fee) ProtoMessage() {}

func (x *Fee) ProtoReflect() protoreflect.Message {
	mi := &file_ibc_applications_fee_v1_fee_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fee.ProtoReflect.Descriptor instead.
func (*Fee) Descriptor() ([]byte, []int) {
	return file_ibc_applications_fee_v1_fee_proto_rawDescGZIP(), []int{0}
}

func (x *Fee) GetRecvFee() []*types.Coin {
	if x != nil {
		return x.RecvFee
	}
	return nil
}

func (x *Fee) GetAckFee() []*types.Coin {
	if x != nil {
		return x.AckFee
	}
	return nil
}

func (x *Fee) GetTimeoutFee() []*types.Coin {
	if x != nil {
		return x.TimeoutFee
	}
	return nil
}

// PacketFee contains ICS29 relayer fees, refund address and optional list of permitted relayers
type PacketFee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// fee encapsulates the recv, ack and timeout fees associated with an IBC packet
	Fee *Fee `protobuf:"bytes,1,opt,name=fee,proto3" json:"fee,omitempty"`
	// the refund address for unspent fees
	RefundAddress string `protobuf:"bytes,2,opt,name=refund_address,json=refundAddress,proto3" json:"refund_address,omitempty"`
	// optional list of relayers permitted to receive fees
	Relayers []string `protobuf:"bytes,3,rep,name=relayers,proto3" json:"relayers,omitempty"`
}

func (x *PacketFee) Reset() {
	*x = PacketFee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_applications_fee_v1_fee_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketFee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketFee) ProtoMessage() {}

func (x *PacketFee) ProtoReflect() protoreflect.Message {
	mi := &file_ibc_applications_fee_v1_fee_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketFee.ProtoReflect.Descriptor instead.
func (*PacketFee) Descriptor() ([]byte, []int) {
	return file_ibc_applications_fee_v1_fee_proto_rawDescGZIP(), []int{1}
}

func (x *PacketFee) GetFee() *Fee {
	if x != nil {
		return x.Fee
	}
	return nil
}

func (x *PacketFee) GetRefundAddress() string {
	if x != nil {
		return x.RefundAddress
	}
	return ""
}

func (x *PacketFee) GetRelayers() []string {
	if x != nil {
		return x.Relayers
	}
	return nil
}

// PacketFees contains a list of type PacketFee
type PacketFees struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// list of packet fees
	PacketFees []*PacketFee `protobuf:"bytes,1,rep,name=packet_fees,json=packetFees,proto3" json:"packet_fees,omitempty"`
}

func (x *PacketFees) Reset() {
	*x = PacketFees{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_applications_fee_v1_fee_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketFees) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketFees) ProtoMessage() {}

func (x *PacketFees) ProtoReflect() protoreflect.Message {
	mi := &file_ibc_applications_fee_v1_fee_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketFees.ProtoReflect.Descriptor instead.
func (*PacketFees) Descriptor() ([]byte, []int) {
	return file_ibc_applications_fee_v1_fee_proto_rawDescGZIP(), []int{2}
}

func (x *PacketFees) GetPacketFees() []*PacketFee {
	if x != nil {
		return x.PacketFees
	}
	return nil
}

// IdentifiedPacketFees contains a list of type PacketFee and associated PacketId
type IdentifiedPacketFees struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique packet identifier comprised of the channel ID, port ID and sequence
	PacketId *types1.PacketId `protobuf:"bytes,1,opt,name=packet_id,json=packetId,proto3" json:"packet_id,omitempty"`
	// list of packet fees
	PacketFees []*PacketFee `protobuf:"bytes,2,rep,name=packet_fees,json=packetFees,proto3" json:"packet_fees,omitempty"`
}

func (x *IdentifiedPacketFees) Reset() {
	*x = IdentifiedPacketFees{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_applications_fee_v1_fee_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdentifiedPacketFees) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentifiedPacketFees) ProtoMessage() {}

func (x *IdentifiedPacketFees) ProtoReflect() protoreflect.Message {
	mi := &file_ibc_applications_fee_v1_fee_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentifiedPacketFees.ProtoReflect.Descriptor instead.
func (*IdentifiedPacketFees) Descriptor() ([]byte, []int) {
	return file_ibc_applications_fee_v1_fee_proto_rawDescGZIP(), []int{3}
}

func (x *IdentifiedPacketFees) GetPacketId() *types1.PacketId {
	if x != nil {
		return x.PacketId
	}
	return nil
}

func (x *IdentifiedPacketFees) GetPacketFees() []*PacketFee {
	if x != nil {
		return x.PacketFees
	}
	return nil
}

var File_ibc_applications_fee_v1_fee_proto protoreflect.FileDescriptor

var file_ibc_applications_fee_v1_fee_proto_rawDesc = []byte{
	0x0a, 0x21, 0x69, 0x62, 0x63, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x66, 0x65, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x65, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x17, 0x69, 0x62, 0x63, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f,
	0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x21, 0x69, 0x62, 0x63, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfd, 0x02, 0x0a, 0x03, 0x46, 0x65, 0x65, 0x12, 0x79, 0x0a,
	0x08, 0x72, 0x65, 0x63, 0x76, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x43, 0xc8, 0xde, 0x1f, 0x00,
	0xf2, 0xde, 0x1f, 0x0f, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x72, 0x65, 0x63, 0x76, 0x5f, 0x66,
	0x65, 0x65, 0x22, 0xaa, 0xdf, 0x1f, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d,
	0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52,
	0x07, 0x72, 0x65, 0x63, 0x76, 0x46, 0x65, 0x65, 0x12, 0x76, 0x0a, 0x07, 0x61, 0x63, 0x6b, 0x5f,
	0x66, 0x65, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x43, 0x6f, 0x69, 0x6e, 0x42, 0x42, 0xc8, 0xde, 0x1f, 0x00, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61,
	0x6d, 0x6c, 0x3a, 0x22, 0x61, 0x63, 0x6b, 0x5f, 0x66, 0x65, 0x65, 0x22, 0xaa, 0xdf, 0x1f, 0x28,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x06, 0x61, 0x63, 0x6b, 0x46, 0x65, 0x65,
	0x12, 0x82, 0x01, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x66, 0x65, 0x65,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69,
	0x6e, 0x42, 0x46, 0xc8, 0xde, 0x1f, 0x00, 0xf2, 0xde, 0x1f, 0x12, 0x79, 0x61, 0x6d, 0x6c, 0x3a,
	0x22, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x66, 0x65, 0x65, 0x22, 0xaa, 0xdf, 0x1f,
	0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x46, 0x65, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x09, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x46, 0x65, 0x65, 0x12, 0x34, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x65, 0x42, 0x04,
	0xc8, 0xde, 0x1f, 0x00, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x40, 0x0a, 0x0e, 0x72, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x19, 0xf2, 0xde, 0x1f, 0x15, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x72, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x52, 0x0d, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0x6d, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x46, 0x65, 0x65, 0x73, 0x12, 0x5f, 0x0a, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f,
	0x66, 0x65, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x69, 0x62, 0x63,
	0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x65, 0x65, 0x42, 0x1a,
	0xc8, 0xde, 0x1f, 0x00, 0xf2, 0xde, 0x1f, 0x12, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x70, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x5f, 0x66, 0x65, 0x65, 0x73, 0x22, 0x52, 0x0a, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x46, 0x65, 0x65, 0x73, 0x22, 0xcd, 0x01, 0x0a, 0x14, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x65, 0x65, 0x73, 0x12,
	0x54, 0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x64, 0x42, 0x18, 0xc8, 0xde, 0x1f, 0x00, 0xf2, 0xde, 0x1f, 0x10, 0x79, 0x61, 0x6d, 0x6c, 0x3a,
	0x22, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x22, 0x52, 0x08, 0x70, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x5f, 0x0a, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f,
	0x66, 0x65, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x69, 0x62, 0x63,
	0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x65, 0x65, 0x42, 0x1a,
	0xc8, 0xde, 0x1f, 0x00, 0xf2, 0xde, 0x1f, 0x12, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x70, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x5f, 0x66, 0x65, 0x65, 0x73, 0x22, 0x52, 0x0a, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x46, 0x65, 0x65, 0x73, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x69, 0x62, 0x63, 0x2d,
	0x67, 0x6f, 0x2f, 0x76, 0x33, 0x2f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x2f, 0x61, 0x70,
	0x70, 0x73, 0x2f, 0x32, 0x39, 0x2d, 0x66, 0x65, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ibc_applications_fee_v1_fee_proto_rawDescOnce sync.Once
	file_ibc_applications_fee_v1_fee_proto_rawDescData = file_ibc_applications_fee_v1_fee_proto_rawDesc
)

func file_ibc_applications_fee_v1_fee_proto_rawDescGZIP() []byte {
	file_ibc_applications_fee_v1_fee_proto_rawDescOnce.Do(func() {
		file_ibc_applications_fee_v1_fee_proto_rawDescData = protoimpl.X.CompressGZIP(file_ibc_applications_fee_v1_fee_proto_rawDescData)
	})
	return file_ibc_applications_fee_v1_fee_proto_rawDescData
}

var file_ibc_applications_fee_v1_fee_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_ibc_applications_fee_v1_fee_proto_goTypes = []interface{}{
	(*Fee)(nil),                  // 0: ibc.applications.fee.v1.Fee
	(*PacketFee)(nil),            // 1: ibc.applications.fee.v1.PacketFee
	(*PacketFees)(nil),           // 2: ibc.applications.fee.v1.PacketFees
	(*IdentifiedPacketFees)(nil), // 3: ibc.applications.fee.v1.IdentifiedPacketFees
	(*types.Coin)(nil),           // 4: cosmos.base.v1beta1.Coin
	(*types1.PacketId)(nil),      // 5: ibc.core.channel.v1.PacketId
}
var file_ibc_applications_fee_v1_fee_proto_depIdxs = []int32{
	4, // 0: ibc.applications.fee.v1.Fee.recv_fee:type_name -> cosmos.base.v1beta1.Coin
	4, // 1: ibc.applications.fee.v1.Fee.ack_fee:type_name -> cosmos.base.v1beta1.Coin
	4, // 2: ibc.applications.fee.v1.Fee.timeout_fee:type_name -> cosmos.base.v1beta1.Coin
	0, // 3: ibc.applications.fee.v1.PacketFee.fee:type_name -> ibc.applications.fee.v1.Fee
	1, // 4: ibc.applications.fee.v1.PacketFees.packet_fees:type_name -> ibc.applications.fee.v1.PacketFee
	5, // 5: ibc.applications.fee.v1.IdentifiedPacketFees.packet_id:type_name -> ibc.core.channel.v1.PacketId
	1, // 6: ibc.applications.fee.v1.IdentifiedPacketFees.packet_fees:type_name -> ibc.applications.fee.v1.PacketFee
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_ibc_applications_fee_v1_fee_proto_init() }
func file_ibc_applications_fee_v1_fee_proto_init() {
	if File_ibc_applications_fee_v1_fee_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ibc_applications_fee_v1_fee_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_applications_fee_v1_fee_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketFee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_applications_fee_v1_fee_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketFees); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_applications_fee_v1_fee_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdentifiedPacketFees); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ibc_applications_fee_v1_fee_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ibc_applications_fee_v1_fee_proto_goTypes,
		DependencyIndexes: file_ibc_applications_fee_v1_fee_proto_depIdxs,
		MessageInfos:      file_ibc_applications_fee_v1_fee_proto_msgTypes,
	}.Build()
	File_ibc_applications_fee_v1_fee_proto = out.File
	file_ibc_applications_fee_v1_fee_proto_rawDesc = nil
	file_ibc_applications_fee_v1_fee_proto_goTypes = nil
	file_ibc_applications_fee_v1_fee_proto_depIdxs = nil
}
