// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0-devel
// 	protoc        v3.14.0
// source: ibc/applications/fee/v1/tx.proto

package types

import (
	types "github.com/cosmos/ibc-go/v3/modules/core/04-channel/types"
	_ "github.com/gogo/protobuf/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MsgRegisterCounterpartyAddress defines the request type for the RegisterCounterpartyAddress rpc
type MsgRegisterCounterpartyAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the relayer address
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// the counterparty relayer address
	CounterpartyAddress string `protobuf:"bytes,2,opt,name=counterparty_address,json=counterpartyAddress,proto3" json:"counterparty_address,omitempty"`
	// unique channel identifier
	ChannelId string `protobuf:"bytes,3,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (x *MsgRegisterCounterpartyAddress) Reset() {
	*x = MsgRegisterCounterpartyAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_applications_fee_v1_tx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRegisterCounterpartyAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRegisterCounterpartyAddress) ProtoMessage() {}

func (x *MsgRegisterCounterpartyAddress) ProtoReflect() protoreflect.Message {
	mi := &file_ibc_applications_fee_v1_tx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRegisterCounterpartyAddress.ProtoReflect.Descriptor instead.
func (*MsgRegisterCounterpartyAddress) Descriptor() ([]byte, []int) {
	return file_ibc_applications_fee_v1_tx_proto_rawDescGZIP(), []int{0}
}

func (x *MsgRegisterCounterpartyAddress) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *MsgRegisterCounterpartyAddress) GetCounterpartyAddress() string {
	if x != nil {
		return x.CounterpartyAddress
	}
	return ""
}

func (x *MsgRegisterCounterpartyAddress) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

// MsgRegisterCounterpartyAddressResponse defines the response type for the RegisterCounterpartyAddress rpc
type MsgRegisterCounterpartyAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgRegisterCounterpartyAddressResponse) Reset() {
	*x = MsgRegisterCounterpartyAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_applications_fee_v1_tx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRegisterCounterpartyAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRegisterCounterpartyAddressResponse) ProtoMessage() {}

func (x *MsgRegisterCounterpartyAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ibc_applications_fee_v1_tx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRegisterCounterpartyAddressResponse.ProtoReflect.Descriptor instead.
func (*MsgRegisterCounterpartyAddressResponse) Descriptor() ([]byte, []int) {
	return file_ibc_applications_fee_v1_tx_proto_rawDescGZIP(), []int{1}
}

// MsgPayPacketFee defines the request type for the PayPacketFee rpc
// This Msg can be used to pay for a packet at the next sequence send & should be combined with the Msg that will be
// paid for
type MsgPayPacketFee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// fee encapsulates the recv, ack and timeout fees associated with an IBC packet
	Fee *Fee `protobuf:"bytes,1,opt,name=fee,proto3" json:"fee,omitempty"`
	// the source port unique identifier
	SourcePortId string `protobuf:"bytes,2,opt,name=source_port_id,json=sourcePortId,proto3" json:"source_port_id,omitempty"`
	// the source channel unique identifer
	SourceChannelId string `protobuf:"bytes,3,opt,name=source_channel_id,json=sourceChannelId,proto3" json:"source_channel_id,omitempty"`
	// account address to refund fee if necessary
	Signer string `protobuf:"bytes,4,opt,name=signer,proto3" json:"signer,omitempty"`
	// optional list of relayers permitted to the receive packet fees
	Relayers []string `protobuf:"bytes,5,rep,name=relayers,proto3" json:"relayers,omitempty"`
}

func (x *MsgPayPacketFee) Reset() {
	*x = MsgPayPacketFee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_applications_fee_v1_tx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgPayPacketFee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgPayPacketFee) ProtoMessage() {}

func (x *MsgPayPacketFee) ProtoReflect() protoreflect.Message {
	mi := &file_ibc_applications_fee_v1_tx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgPayPacketFee.ProtoReflect.Descriptor instead.
func (*MsgPayPacketFee) Descriptor() ([]byte, []int) {
	return file_ibc_applications_fee_v1_tx_proto_rawDescGZIP(), []int{2}
}

func (x *MsgPayPacketFee) GetFee() *Fee {
	if x != nil {
		return x.Fee
	}
	return nil
}

func (x *MsgPayPacketFee) GetSourcePortId() string {
	if x != nil {
		return x.SourcePortId
	}
	return ""
}

func (x *MsgPayPacketFee) GetSourceChannelId() string {
	if x != nil {
		return x.SourceChannelId
	}
	return ""
}

func (x *MsgPayPacketFee) GetSigner() string {
	if x != nil {
		return x.Signer
	}
	return ""
}

func (x *MsgPayPacketFee) GetRelayers() []string {
	if x != nil {
		return x.Relayers
	}
	return nil
}

// MsgPayPacketFeeResponse defines the response type for the PayPacketFee rpc
type MsgPayPacketFeeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgPayPacketFeeResponse) Reset() {
	*x = MsgPayPacketFeeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_applications_fee_v1_tx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgPayPacketFeeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgPayPacketFeeResponse) ProtoMessage() {}

func (x *MsgPayPacketFeeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ibc_applications_fee_v1_tx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgPayPacketFeeResponse.ProtoReflect.Descriptor instead.
func (*MsgPayPacketFeeResponse) Descriptor() ([]byte, []int) {
	return file_ibc_applications_fee_v1_tx_proto_rawDescGZIP(), []int{3}
}

// MsgPayPacketFeeAsync defines the request type for the PayPacketFeeAsync rpc
// This Msg can be used to pay for a packet at a specified sequence (instead of the next sequence send)
type MsgPayPacketFeeAsync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique packet identifier comprised of the channel ID, port ID and sequence
	PacketId *types.PacketId `protobuf:"bytes,1,opt,name=packet_id,json=packetId,proto3" json:"packet_id,omitempty"`
	// the packet fee associated with a particular IBC packet
	PacketFee *PacketFee `protobuf:"bytes,2,opt,name=packet_fee,json=packetFee,proto3" json:"packet_fee,omitempty"`
}

func (x *MsgPayPacketFeeAsync) Reset() {
	*x = MsgPayPacketFeeAsync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_applications_fee_v1_tx_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgPayPacketFeeAsync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgPayPacketFeeAsync) ProtoMessage() {}

func (x *MsgPayPacketFeeAsync) ProtoReflect() protoreflect.Message {
	mi := &file_ibc_applications_fee_v1_tx_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgPayPacketFeeAsync.ProtoReflect.Descriptor instead.
func (*MsgPayPacketFeeAsync) Descriptor() ([]byte, []int) {
	return file_ibc_applications_fee_v1_tx_proto_rawDescGZIP(), []int{4}
}

func (x *MsgPayPacketFeeAsync) GetPacketId() *types.PacketId {
	if x != nil {
		return x.PacketId
	}
	return nil
}

func (x *MsgPayPacketFeeAsync) GetPacketFee() *PacketFee {
	if x != nil {
		return x.PacketFee
	}
	return nil
}

// MsgPayPacketFeeAsyncResponse defines the response type for the PayPacketFeeAsync rpc
type MsgPayPacketFeeAsyncResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgPayPacketFeeAsyncResponse) Reset() {
	*x = MsgPayPacketFeeAsyncResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_applications_fee_v1_tx_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgPayPacketFeeAsyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgPayPacketFeeAsyncResponse) ProtoMessage() {}

func (x *MsgPayPacketFeeAsyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ibc_applications_fee_v1_tx_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgPayPacketFeeAsyncResponse.ProtoReflect.Descriptor instead.
func (*MsgPayPacketFeeAsyncResponse) Descriptor() ([]byte, []int) {
	return file_ibc_applications_fee_v1_tx_proto_rawDescGZIP(), []int{5}
}

var File_ibc_applications_fee_v1_tx_proto protoreflect.FileDescriptor

var file_ibc_applications_fee_v1_tx_proto_rawDesc = []byte{
	0x0a, 0x20, 0x69, 0x62, 0x63, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x66, 0x65, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x78, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x17, 0x69, 0x62, 0x63, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x14, 0x67, 0x6f, 0x67,
	0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x21, 0x69, 0x62, 0x63, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x66, 0x65, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x65, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x69, 0x62, 0x63, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xce, 0x01, 0x0a, 0x1e, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x52, 0x0a, 0x14, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x1f, 0xf2, 0xde, 0x1f, 0x1b, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x22, 0x52, 0x13, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x34, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x15, 0xf2, 0xde,
	0x1f, 0x11, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f,
	0x69, 0x64, 0x22, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x3a, 0x08,
	0x88, 0xa0, 0x1f, 0x00, 0xe8, 0xa0, 0x1f, 0x00, 0x22, 0x28, 0x0a, 0x26, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x90, 0x02, 0x0a, 0x0f, 0x4d, 0x73, 0x67, 0x50, 0x61, 0x79, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x46, 0x65, 0x65, 0x12, 0x34, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65,
	0x65, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x3f, 0x0a, 0x0e,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x19, 0xf2, 0xde, 0x1f, 0x15, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x22, 0x52,
	0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x48, 0x0a,
	0x11, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1c, 0xf2, 0xde, 0x1f, 0x18, 0x79, 0x61,
	0x6d, 0x6c, 0x3a, 0x22, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x69, 0x64, 0x22, 0x52, 0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x3a, 0x08, 0x88, 0xa0, 0x1f,
	0x00, 0xe8, 0xa0, 0x1f, 0x00, 0x22, 0x19, 0x0a, 0x17, 0x4d, 0x73, 0x67, 0x50, 0x61, 0x79, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xd4, 0x01, 0x0a, 0x14, 0x4d, 0x73, 0x67, 0x50, 0x61, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x46, 0x65, 0x65, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x12, 0x54, 0x0a, 0x09, 0x70, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x69,
	0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x42, 0x18, 0xc8, 0xde, 0x1f,
	0x00, 0xf2, 0xde, 0x1f, 0x10, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x70, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x22, 0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12,
	0x5c, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x46, 0x65, 0x65, 0x42, 0x19, 0xc8, 0xde, 0x1f, 0x00, 0xf2, 0xde, 0x1f,
	0x11, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x66, 0x65,
	0x65, 0x22, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x65, 0x65, 0x3a, 0x08, 0x88,
	0xa0, 0x1f, 0x00, 0xe8, 0xa0, 0x1f, 0x00, 0x22, 0x1e, 0x0a, 0x1c, 0x4d, 0x73, 0x67, 0x50, 0x61,
	0x79, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x65, 0x65, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x86, 0x03, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x12,
	0x97, 0x01, 0x0a, 0x1b, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x37, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x3f, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x0c, 0x50, 0x61, 0x79,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x65, 0x65, 0x12, 0x28, 0x2e, 0x69, 0x62, 0x63, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x50, 0x61, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x46, 0x65, 0x65, 0x1a, 0x30, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73,
	0x67, 0x50, 0x61, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x65, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x79, 0x0a, 0x11, 0x50, 0x61, 0x79, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x46, 0x65, 0x65, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x12, 0x2d, 0x2e, 0x69, 0x62, 0x63,
	0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x65,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x50, 0x61, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x46, 0x65, 0x65, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x1a, 0x35, 0x2e, 0x69, 0x62, 0x63, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x65, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x50, 0x61, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x46, 0x65, 0x65, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x69, 0x62, 0x63, 0x2d, 0x67, 0x6f, 0x2f, 0x76, 0x33, 0x2f,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x32, 0x39, 0x2d,
	0x66, 0x65, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_ibc_applications_fee_v1_tx_proto_rawDescOnce sync.Once
	file_ibc_applications_fee_v1_tx_proto_rawDescData = file_ibc_applications_fee_v1_tx_proto_rawDesc
)

func file_ibc_applications_fee_v1_tx_proto_rawDescGZIP() []byte {
	file_ibc_applications_fee_v1_tx_proto_rawDescOnce.Do(func() {
		file_ibc_applications_fee_v1_tx_proto_rawDescData = protoimpl.X.CompressGZIP(file_ibc_applications_fee_v1_tx_proto_rawDescData)
	})
	return file_ibc_applications_fee_v1_tx_proto_rawDescData
}

var file_ibc_applications_fee_v1_tx_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_ibc_applications_fee_v1_tx_proto_goTypes = []interface{}{
	(*MsgRegisterCounterpartyAddress)(nil),         // 0: ibc.applications.fee.v1.MsgRegisterCounterpartyAddress
	(*MsgRegisterCounterpartyAddressResponse)(nil), // 1: ibc.applications.fee.v1.MsgRegisterCounterpartyAddressResponse
	(*MsgPayPacketFee)(nil),                        // 2: ibc.applications.fee.v1.MsgPayPacketFee
	(*MsgPayPacketFeeResponse)(nil),                // 3: ibc.applications.fee.v1.MsgPayPacketFeeResponse
	(*MsgPayPacketFeeAsync)(nil),                   // 4: ibc.applications.fee.v1.MsgPayPacketFeeAsync
	(*MsgPayPacketFeeAsyncResponse)(nil),           // 5: ibc.applications.fee.v1.MsgPayPacketFeeAsyncResponse
	(*Fee)(nil),                                    // 6: ibc.applications.fee.v1.Fee
	(*types.PacketId)(nil),                         // 7: ibc.core.channel.v1.PacketId
	(*PacketFee)(nil),                              // 8: ibc.applications.fee.v1.PacketFee
}
var file_ibc_applications_fee_v1_tx_proto_depIdxs = []int32{
	6, // 0: ibc.applications.fee.v1.MsgPayPacketFee.fee:type_name -> ibc.applications.fee.v1.Fee
	7, // 1: ibc.applications.fee.v1.MsgPayPacketFeeAsync.packet_id:type_name -> ibc.core.channel.v1.PacketId
	8, // 2: ibc.applications.fee.v1.MsgPayPacketFeeAsync.packet_fee:type_name -> ibc.applications.fee.v1.PacketFee
	0, // 3: ibc.applications.fee.v1.Msg.RegisterCounterpartyAddress:input_type -> ibc.applications.fee.v1.MsgRegisterCounterpartyAddress
	2, // 4: ibc.applications.fee.v1.Msg.PayPacketFee:input_type -> ibc.applications.fee.v1.MsgPayPacketFee
	4, // 5: ibc.applications.fee.v1.Msg.PayPacketFeeAsync:input_type -> ibc.applications.fee.v1.MsgPayPacketFeeAsync
	1, // 6: ibc.applications.fee.v1.Msg.RegisterCounterpartyAddress:output_type -> ibc.applications.fee.v1.MsgRegisterCounterpartyAddressResponse
	3, // 7: ibc.applications.fee.v1.Msg.PayPacketFee:output_type -> ibc.applications.fee.v1.MsgPayPacketFeeResponse
	5, // 8: ibc.applications.fee.v1.Msg.PayPacketFeeAsync:output_type -> ibc.applications.fee.v1.MsgPayPacketFeeAsyncResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_ibc_applications_fee_v1_tx_proto_init() }
func file_ibc_applications_fee_v1_tx_proto_init() {
	if File_ibc_applications_fee_v1_tx_proto != nil {
		return
	}
	file_ibc_applications_fee_v1_fee_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ibc_applications_fee_v1_tx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRegisterCounterpartyAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_applications_fee_v1_tx_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRegisterCounterpartyAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_applications_fee_v1_tx_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgPayPacketFee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_applications_fee_v1_tx_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgPayPacketFeeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_applications_fee_v1_tx_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgPayPacketFeeAsync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_applications_fee_v1_tx_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgPayPacketFeeAsyncResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ibc_applications_fee_v1_tx_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ibc_applications_fee_v1_tx_proto_goTypes,
		DependencyIndexes: file_ibc_applications_fee_v1_tx_proto_depIdxs,
		MessageInfos:      file_ibc_applications_fee_v1_tx_proto_msgTypes,
	}.Build()
	File_ibc_applications_fee_v1_tx_proto = out.File
	file_ibc_applications_fee_v1_tx_proto_rawDesc = nil
	file_ibc_applications_fee_v1_tx_proto_goTypes = nil
	file_ibc_applications_fee_v1_tx_proto_depIdxs = nil
}
