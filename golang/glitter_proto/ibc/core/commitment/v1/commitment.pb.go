// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0-devel
// 	protoc        v3.14.0
// source: ibc/core/commitment/v1/commitment.proto

package types

import (
	_go "github.com/confio/ics23/go"
	_ "github.com/gogo/protobuf/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MerkleRoot defines a merkle root hash.
// In the Cosmos SDK, the AppHash of a block header becomes the root.
type MerkleRoot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash []byte `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *MerkleRoot) Reset() {
	*x = MerkleRoot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_commitment_v1_commitment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerkleRoot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerkleRoot) ProtoMessage() {}

func (x *MerkleRoot) ProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_commitment_v1_commitment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerkleRoot.ProtoReflect.Descriptor instead.
func (*MerkleRoot) Descriptor() ([]byte, []int) {
	return file_ibc_core_commitment_v1_commitment_proto_rawDescGZIP(), []int{0}
}

func (x *MerkleRoot) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

// MerklePrefix is merkle path prefixed to the key.
// The constructed key from the Path and the key will be append(Path.KeyPath,
// append(Path.KeyPrefix, key...))
type MerklePrefix struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyPrefix []byte `protobuf:"bytes,1,opt,name=key_prefix,json=keyPrefix,proto3" json:"key_prefix,omitempty"`
}

func (x *MerklePrefix) Reset() {
	*x = MerklePrefix{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_commitment_v1_commitment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerklePrefix) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerklePrefix) ProtoMessage() {}

func (x *MerklePrefix) ProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_commitment_v1_commitment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerklePrefix.ProtoReflect.Descriptor instead.
func (*MerklePrefix) Descriptor() ([]byte, []int) {
	return file_ibc_core_commitment_v1_commitment_proto_rawDescGZIP(), []int{1}
}

func (x *MerklePrefix) GetKeyPrefix() []byte {
	if x != nil {
		return x.KeyPrefix
	}
	return nil
}

// MerklePath is the path used to verify commitment proofs, which can be an
// arbitrary structured object (defined by a commitment type).
// MerklePath is represented from root-to-leaf
type MerklePath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyPath []string `protobuf:"bytes,1,rep,name=key_path,json=keyPath,proto3" json:"key_path,omitempty"`
}

func (x *MerklePath) Reset() {
	*x = MerklePath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_commitment_v1_commitment_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerklePath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerklePath) ProtoMessage() {}

func (x *MerklePath) ProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_commitment_v1_commitment_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerklePath.ProtoReflect.Descriptor instead.
func (*MerklePath) Descriptor() ([]byte, []int) {
	return file_ibc_core_commitment_v1_commitment_proto_rawDescGZIP(), []int{2}
}

func (x *MerklePath) GetKeyPath() []string {
	if x != nil {
		return x.KeyPath
	}
	return nil
}

// MerkleProof is a wrapper type over a chain of CommitmentProofs.
// It demonstrates membership or non-membership for an element or set of
// elements, verifiable in conjunction with a known commitment root. Proofs
// should be succinct.
// MerkleProofs are ordered from leaf-to-root
type MerkleProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proofs []*_go.CommitmentProof `protobuf:"bytes,1,rep,name=proofs,proto3" json:"proofs,omitempty"`
}

func (x *MerkleProof) Reset() {
	*x = MerkleProof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_commitment_v1_commitment_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerkleProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerkleProof) ProtoMessage() {}

func (x *MerkleProof) ProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_commitment_v1_commitment_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerkleProof.ProtoReflect.Descriptor instead.
func (*MerkleProof) Descriptor() ([]byte, []int) {
	return file_ibc_core_commitment_v1_commitment_proto_rawDescGZIP(), []int{3}
}

func (x *MerkleProof) GetProofs() []*_go.CommitmentProof {
	if x != nil {
		return x.Proofs
	}
	return nil
}

var File_ibc_core_commitment_v1_commitment_proto protoreflect.FileDescriptor

var file_ibc_core_commitment_v1_commitment_proto_rawDesc = []byte{
	0x0a, 0x27, 0x69, 0x62, 0x63, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x69, 0x62, 0x63, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x6f, 0x2f,
	0x70, 0x72, 0x6f, 0x6f, 0x66, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x26, 0x0a, 0x0a,
	0x4d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x3a, 0x04,
	0x88, 0xa0, 0x1f, 0x00, 0x22, 0x44, 0x0a, 0x0c, 0x4d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x50, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x12, 0x34, 0x0a, 0x0a, 0x6b, 0x65, 0x79, 0x5f, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x15, 0xf2, 0xde, 0x1f, 0x11, 0x79, 0x61,
	0x6d, 0x6c, 0x3a, 0x22, 0x6b, 0x65, 0x79, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x22, 0x52,
	0x09, 0x6b, 0x65, 0x79, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x22, 0x42, 0x0a, 0x0a, 0x4d, 0x65,
	0x72, 0x6b, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x13, 0xf2, 0xde, 0x1f, 0x0f,
	0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x6b, 0x65, 0x79, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x22, 0x52,
	0x07, 0x6b, 0x65, 0x79, 0x50, 0x61, 0x74, 0x68, 0x3a, 0x04, 0x98, 0xa0, 0x1f, 0x00, 0x22, 0x3d,
	0x0a, 0x0b, 0x4d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x2e, 0x0a,
	0x06, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x69, 0x63, 0x73, 0x32, 0x33, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x73, 0x42, 0x3e, 0x5a,
	0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2f, 0x69, 0x62, 0x63, 0x2d, 0x67, 0x6f, 0x2f, 0x76, 0x33, 0x2f, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x32, 0x33, 0x2d, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ibc_core_commitment_v1_commitment_proto_rawDescOnce sync.Once
	file_ibc_core_commitment_v1_commitment_proto_rawDescData = file_ibc_core_commitment_v1_commitment_proto_rawDesc
)

func file_ibc_core_commitment_v1_commitment_proto_rawDescGZIP() []byte {
	file_ibc_core_commitment_v1_commitment_proto_rawDescOnce.Do(func() {
		file_ibc_core_commitment_v1_commitment_proto_rawDescData = protoimpl.X.CompressGZIP(file_ibc_core_commitment_v1_commitment_proto_rawDescData)
	})
	return file_ibc_core_commitment_v1_commitment_proto_rawDescData
}

var file_ibc_core_commitment_v1_commitment_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_ibc_core_commitment_v1_commitment_proto_goTypes = []interface{}{
	(*MerkleRoot)(nil),          // 0: ibc.core.commitment.v1.MerkleRoot
	(*MerklePrefix)(nil),        // 1: ibc.core.commitment.v1.MerklePrefix
	(*MerklePath)(nil),          // 2: ibc.core.commitment.v1.MerklePath
	(*MerkleProof)(nil),         // 3: ibc.core.commitment.v1.MerkleProof
	(*_go.CommitmentProof)(nil), // 4: ics23.CommitmentProof
}
var file_ibc_core_commitment_v1_commitment_proto_depIdxs = []int32{
	4, // 0: ibc.core.commitment.v1.MerkleProof.proofs:type_name -> ics23.CommitmentProof
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_ibc_core_commitment_v1_commitment_proto_init() }
func file_ibc_core_commitment_v1_commitment_proto_init() {
	if File_ibc_core_commitment_v1_commitment_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ibc_core_commitment_v1_commitment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerkleRoot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_commitment_v1_commitment_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerklePrefix); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_commitment_v1_commitment_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerklePath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_commitment_v1_commitment_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerkleProof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ibc_core_commitment_v1_commitment_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ibc_core_commitment_v1_commitment_proto_goTypes,
		DependencyIndexes: file_ibc_core_commitment_v1_commitment_proto_depIdxs,
		MessageInfos:      file_ibc_core_commitment_v1_commitment_proto_msgTypes,
	}.Build()
	File_ibc_core_commitment_v1_commitment_proto = out.File
	file_ibc_core_commitment_v1_commitment_proto_rawDesc = nil
	file_ibc_core_commitment_v1_commitment_proto_goTypes = nil
	file_ibc_core_commitment_v1_commitment_proto_depIdxs = nil
}
