// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0-devel
// 	protoc        v3.14.0
// source: cosmwasm/wasm/v1/types.proto

package types

import (
	_ "github.com/gogo/protobuf/gogoproto"
	any1 "github.com/golang/protobuf/ptypes/any"
	_ "github.com/regen-network/cosmos-proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AccessType permission types
type AccessType int32

const (
	// AccessTypeUnspecified placeholder for empty value
	AccessType_ACCESS_TYPE_UNSPECIFIED AccessType = 0
	// AccessTypeNobody forbidden
	AccessType_ACCESS_TYPE_NOBODY AccessType = 1
	// AccessTypeOnlyAddress restricted to an address
	AccessType_ACCESS_TYPE_ONLY_ADDRESS AccessType = 2
	// AccessTypeEverybody unrestricted
	AccessType_ACCESS_TYPE_EVERYBODY AccessType = 3
)

// Enum value maps for AccessType.
var (
	AccessType_name = map[int32]string{
		0: "ACCESS_TYPE_UNSPECIFIED",
		1: "ACCESS_TYPE_NOBODY",
		2: "ACCESS_TYPE_ONLY_ADDRESS",
		3: "ACCESS_TYPE_EVERYBODY",
	}
	AccessType_value = map[string]int32{
		"ACCESS_TYPE_UNSPECIFIED":  0,
		"ACCESS_TYPE_NOBODY":       1,
		"ACCESS_TYPE_ONLY_ADDRESS": 2,
		"ACCESS_TYPE_EVERYBODY":    3,
	}
)

func (x AccessType) Enum() *AccessType {
	p := new(AccessType)
	*p = x
	return p
}

func (x AccessType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccessType) Descriptor() protoreflect.EnumDescriptor {
	return file_cosmwasm_wasm_v1_types_proto_enumTypes[0].Descriptor()
}

func (AccessType) Type() protoreflect.EnumType {
	return &file_cosmwasm_wasm_v1_types_proto_enumTypes[0]
}

func (x AccessType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccessType.Descriptor instead.
func (AccessType) EnumDescriptor() ([]byte, []int) {
	return file_cosmwasm_wasm_v1_types_proto_rawDescGZIP(), []int{0}
}

// ContractCodeHistoryOperationType actions that caused a code change
type ContractCodeHistoryOperationType int32

const (
	// ContractCodeHistoryOperationTypeUnspecified placeholder for empty value
	ContractCodeHistoryOperationType_CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED ContractCodeHistoryOperationType = 0
	// ContractCodeHistoryOperationTypeInit on chain contract instantiation
	ContractCodeHistoryOperationType_CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT ContractCodeHistoryOperationType = 1
	// ContractCodeHistoryOperationTypeMigrate code migration
	ContractCodeHistoryOperationType_CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE ContractCodeHistoryOperationType = 2
	// ContractCodeHistoryOperationTypeGenesis based on genesis data
	ContractCodeHistoryOperationType_CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS ContractCodeHistoryOperationType = 3
)

// Enum value maps for ContractCodeHistoryOperationType.
var (
	ContractCodeHistoryOperationType_name = map[int32]string{
		0: "CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED",
		1: "CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT",
		2: "CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE",
		3: "CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS",
	}
	ContractCodeHistoryOperationType_value = map[string]int32{
		"CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED": 0,
		"CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT":        1,
		"CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE":     2,
		"CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS":     3,
	}
)

func (x ContractCodeHistoryOperationType) Enum() *ContractCodeHistoryOperationType {
	p := new(ContractCodeHistoryOperationType)
	*p = x
	return p
}

func (x ContractCodeHistoryOperationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContractCodeHistoryOperationType) Descriptor() protoreflect.EnumDescriptor {
	return file_cosmwasm_wasm_v1_types_proto_enumTypes[1].Descriptor()
}

func (ContractCodeHistoryOperationType) Type() protoreflect.EnumType {
	return &file_cosmwasm_wasm_v1_types_proto_enumTypes[1]
}

func (x ContractCodeHistoryOperationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContractCodeHistoryOperationType.Descriptor instead.
func (ContractCodeHistoryOperationType) EnumDescriptor() ([]byte, []int) {
	return file_cosmwasm_wasm_v1_types_proto_rawDescGZIP(), []int{1}
}

// AccessTypeParam
type AccessTypeParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value AccessType `protobuf:"varint,1,opt,name=value,proto3,enum=cosmwasm.wasm.v1.AccessType" json:"value,omitempty"`
}

func (x *AccessTypeParam) Reset() {
	*x = AccessTypeParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmwasm_wasm_v1_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessTypeParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessTypeParam) ProtoMessage() {}

func (x *AccessTypeParam) ProtoReflect() protoreflect.Message {
	mi := &file_cosmwasm_wasm_v1_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessTypeParam.ProtoReflect.Descriptor instead.
func (*AccessTypeParam) Descriptor() ([]byte, []int) {
	return file_cosmwasm_wasm_v1_types_proto_rawDescGZIP(), []int{0}
}

func (x *AccessTypeParam) GetValue() AccessType {
	if x != nil {
		return x.Value
	}
	return AccessType_ACCESS_TYPE_UNSPECIFIED
}

// AccessConfig access control type.
type AccessConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Permission AccessType `protobuf:"varint,1,opt,name=permission,proto3,enum=cosmwasm.wasm.v1.AccessType" json:"permission,omitempty"`
	Address    string     `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *AccessConfig) Reset() {
	*x = AccessConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmwasm_wasm_v1_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessConfig) ProtoMessage() {}

func (x *AccessConfig) ProtoReflect() protoreflect.Message {
	mi := &file_cosmwasm_wasm_v1_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessConfig.ProtoReflect.Descriptor instead.
func (*AccessConfig) Descriptor() ([]byte, []int) {
	return file_cosmwasm_wasm_v1_types_proto_rawDescGZIP(), []int{1}
}

func (x *AccessConfig) GetPermission() AccessType {
	if x != nil {
		return x.Permission
	}
	return AccessType_ACCESS_TYPE_UNSPECIFIED
}

func (x *AccessConfig) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// Params defines the set of wasm parameters.
type Params struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CodeUploadAccess             *AccessConfig `protobuf:"bytes,1,opt,name=code_upload_access,json=codeUploadAccess,proto3" json:"code_upload_access,omitempty"`
	InstantiateDefaultPermission AccessType    `protobuf:"varint,2,opt,name=instantiate_default_permission,json=instantiateDefaultPermission,proto3,enum=cosmwasm.wasm.v1.AccessType" json:"instantiate_default_permission,omitempty"`
}

func (x *Params) Reset() {
	*x = Params{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmwasm_wasm_v1_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Params) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Params) ProtoMessage() {}

func (x *Params) ProtoReflect() protoreflect.Message {
	mi := &file_cosmwasm_wasm_v1_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Params.ProtoReflect.Descriptor instead.
func (*Params) Descriptor() ([]byte, []int) {
	return file_cosmwasm_wasm_v1_types_proto_rawDescGZIP(), []int{2}
}

func (x *Params) GetCodeUploadAccess() *AccessConfig {
	if x != nil {
		return x.CodeUploadAccess
	}
	return nil
}

func (x *Params) GetInstantiateDefaultPermission() AccessType {
	if x != nil {
		return x.InstantiateDefaultPermission
	}
	return AccessType_ACCESS_TYPE_UNSPECIFIED
}

// CodeInfo is data for the uploaded contract WASM code
type CodeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// CodeHash is the unique identifier created by wasmvm
	CodeHash []byte `protobuf:"bytes,1,opt,name=code_hash,json=codeHash,proto3" json:"code_hash,omitempty"`
	// Creator address who initially stored the code
	Creator string `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
	// InstantiateConfig access control to apply on contract creation, optional
	InstantiateConfig *AccessConfig `protobuf:"bytes,5,opt,name=instantiate_config,json=instantiateConfig,proto3" json:"instantiate_config,omitempty"`
}

func (x *CodeInfo) Reset() {
	*x = CodeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmwasm_wasm_v1_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeInfo) ProtoMessage() {}

func (x *CodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cosmwasm_wasm_v1_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeInfo.ProtoReflect.Descriptor instead.
func (*CodeInfo) Descriptor() ([]byte, []int) {
	return file_cosmwasm_wasm_v1_types_proto_rawDescGZIP(), []int{3}
}

func (x *CodeInfo) GetCodeHash() []byte {
	if x != nil {
		return x.CodeHash
	}
	return nil
}

func (x *CodeInfo) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *CodeInfo) GetInstantiateConfig() *AccessConfig {
	if x != nil {
		return x.InstantiateConfig
	}
	return nil
}

// ContractInfo stores a WASM contract instance
type ContractInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// CodeID is the reference to the stored Wasm code
	CodeId uint64 `protobuf:"varint,1,opt,name=code_id,json=codeId,proto3" json:"code_id,omitempty"`
	// Creator address who initially instantiated the contract
	Creator string `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
	// Admin is an optional address that can execute migrations
	Admin string `protobuf:"bytes,3,opt,name=admin,proto3" json:"admin,omitempty"`
	// Label is optional metadata to be stored with a contract instance.
	Label string `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`
	// Created Tx position when the contract was instantiated.
	// This data should kept internal and not be exposed via query results. Just
	// use for sorting
	Created   *AbsoluteTxPosition `protobuf:"bytes,5,opt,name=created,proto3" json:"created,omitempty"`
	IbcPortId string              `protobuf:"bytes,6,opt,name=ibc_port_id,json=ibcPortId,proto3" json:"ibc_port_id,omitempty"`
	// Extension is an extension point to store custom metadata within the
	// persistence model.
	Extension *any1.Any `protobuf:"bytes,7,opt,name=extension,proto3" json:"extension,omitempty"`
}

func (x *ContractInfo) Reset() {
	*x = ContractInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmwasm_wasm_v1_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractInfo) ProtoMessage() {}

func (x *ContractInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cosmwasm_wasm_v1_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractInfo.ProtoReflect.Descriptor instead.
func (*ContractInfo) Descriptor() ([]byte, []int) {
	return file_cosmwasm_wasm_v1_types_proto_rawDescGZIP(), []int{4}
}

func (x *ContractInfo) GetCodeId() uint64 {
	if x != nil {
		return x.CodeId
	}
	return 0
}

func (x *ContractInfo) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *ContractInfo) GetAdmin() string {
	if x != nil {
		return x.Admin
	}
	return ""
}

func (x *ContractInfo) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *ContractInfo) GetCreated() *AbsoluteTxPosition {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *ContractInfo) GetIbcPortId() string {
	if x != nil {
		return x.IbcPortId
	}
	return ""
}

func (x *ContractInfo) GetExtension() *any1.Any {
	if x != nil {
		return x.Extension
	}
	return nil
}

// ContractCodeHistoryEntry metadata to a contract.
type ContractCodeHistoryEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operation ContractCodeHistoryOperationType `protobuf:"varint,1,opt,name=operation,proto3,enum=cosmwasm.wasm.v1.ContractCodeHistoryOperationType" json:"operation,omitempty"`
	// CodeID is the reference to the stored WASM code
	CodeId uint64 `protobuf:"varint,2,opt,name=code_id,json=codeId,proto3" json:"code_id,omitempty"`
	// Updated Tx position when the operation was executed.
	Updated *AbsoluteTxPosition `protobuf:"bytes,3,opt,name=updated,proto3" json:"updated,omitempty"`
	Msg     []byte              `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ContractCodeHistoryEntry) Reset() {
	*x = ContractCodeHistoryEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmwasm_wasm_v1_types_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractCodeHistoryEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractCodeHistoryEntry) ProtoMessage() {}

func (x *ContractCodeHistoryEntry) ProtoReflect() protoreflect.Message {
	mi := &file_cosmwasm_wasm_v1_types_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractCodeHistoryEntry.ProtoReflect.Descriptor instead.
func (*ContractCodeHistoryEntry) Descriptor() ([]byte, []int) {
	return file_cosmwasm_wasm_v1_types_proto_rawDescGZIP(), []int{5}
}

func (x *ContractCodeHistoryEntry) GetOperation() ContractCodeHistoryOperationType {
	if x != nil {
		return x.Operation
	}
	return ContractCodeHistoryOperationType_CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
}

func (x *ContractCodeHistoryEntry) GetCodeId() uint64 {
	if x != nil {
		return x.CodeId
	}
	return 0
}

func (x *ContractCodeHistoryEntry) GetUpdated() *AbsoluteTxPosition {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *ContractCodeHistoryEntry) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

// AbsoluteTxPosition is a unique transaction position that allows for global
// ordering of transactions.
type AbsoluteTxPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// BlockHeight is the block the contract was created at
	BlockHeight uint64 `protobuf:"varint,1,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	// TxIndex is a monotonic counter within the block (actual transaction index,
	// or gas consumed)
	TxIndex uint64 `protobuf:"varint,2,opt,name=tx_index,json=txIndex,proto3" json:"tx_index,omitempty"`
}

func (x *AbsoluteTxPosition) Reset() {
	*x = AbsoluteTxPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmwasm_wasm_v1_types_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbsoluteTxPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbsoluteTxPosition) ProtoMessage() {}

func (x *AbsoluteTxPosition) ProtoReflect() protoreflect.Message {
	mi := &file_cosmwasm_wasm_v1_types_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbsoluteTxPosition.ProtoReflect.Descriptor instead.
func (*AbsoluteTxPosition) Descriptor() ([]byte, []int) {
	return file_cosmwasm_wasm_v1_types_proto_rawDescGZIP(), []int{6}
}

func (x *AbsoluteTxPosition) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *AbsoluteTxPosition) GetTxIndex() uint64 {
	if x != nil {
		return x.TxIndex
	}
	return 0
}

// Model is a struct that holds a KV pair
type Model struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// hex-encode key to read it better (this is often ascii)
	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// base64-encode raw value
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Model) Reset() {
	*x = Model{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmwasm_wasm_v1_types_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Model) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Model) ProtoMessage() {}

func (x *Model) ProtoReflect() protoreflect.Message {
	mi := &file_cosmwasm_wasm_v1_types_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Model.ProtoReflect.Descriptor instead.
func (*Model) Descriptor() ([]byte, []int) {
	return file_cosmwasm_wasm_v1_types_proto_rawDescGZIP(), []int{7}
}

func (x *Model) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Model) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_cosmwasm_wasm_v1_types_proto protoreflect.FileDescriptor

var file_cosmwasm_wasm_v1_types_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x63, 0x6f, 0x73, 0x6d, 0x77, 0x61, 0x73, 0x6d, 0x2f, 0x77, 0x61, 0x73, 0x6d, 0x2f,
	0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10,
	0x63, 0x6f, 0x73, 0x6d, 0x77, 0x61, 0x73, 0x6d, 0x2e, 0x77, 0x61, 0x73, 0x6d, 0x2e, 0x76, 0x31,
	0x1a, 0x19, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67,
	0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5d, 0x0a, 0x0f,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x44, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c,
	0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x77, 0x61, 0x73, 0x6d, 0x2e, 0x77, 0x61, 0x73, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x42, 0x10, 0xf2, 0xde,
	0x1f, 0x0c, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x04, 0x98, 0xa0, 0x1f, 0x01, 0x22, 0x97, 0x01, 0x0a, 0x0c,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x53, 0x0a, 0x0a,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x77, 0x61, 0x73, 0x6d, 0x2e, 0x77, 0x61, 0x73, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x42, 0x15,
	0xf2, 0xde, 0x1f, 0x11, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x2c, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x12, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x3a,
	0x04, 0x98, 0xa0, 0x1f, 0x01, 0x22, 0x8f, 0x02, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x6f, 0x0a, 0x12, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63,
	0x6f, 0x73, 0x6d, 0x77, 0x61, 0x73, 0x6d, 0x2e, 0x77, 0x61, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x21, 0xc8, 0xde,
	0x1f, 0x00, 0xf2, 0xde, 0x1f, 0x19, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x63, 0x6f, 0x64, 0x65,
	0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x52,
	0x10, 0x63, 0x6f, 0x64, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x8d, 0x01, 0x0a, 0x1e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x61, 0x74,
	0x65, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x73,
	0x6d, 0x77, 0x61, 0x73, 0x6d, 0x2e, 0x77, 0x61, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x42, 0x29, 0xf2, 0xde, 0x1f, 0x25, 0x79, 0x61,
	0x6d, 0x6c, 0x3a, 0x22, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x61, 0x74, 0x65, 0x5f,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x52, 0x1c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x61, 0x74, 0x65,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x3a, 0x04, 0x98, 0xa0, 0x1f, 0x00, 0x22, 0xa2, 0x01, 0x0a, 0x08, 0x43, 0x6f, 0x64, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x53, 0x0a, 0x12, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x77, 0x61,
	0x73, 0x6d, 0x2e, 0x77, 0x61, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x11, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x22, 0xbd, 0x02, 0x0a,
	0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a,
	0x07, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0a,
	0xe2, 0xde, 0x1f, 0x06, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x3e, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x73, 0x6d,
	0x77, 0x61, 0x73, 0x6d, 0x2e, 0x77, 0x61, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x62, 0x73,
	0x6f, 0x6c, 0x75, 0x74, 0x65, 0x54, 0x78, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2d, 0x0a, 0x0b, 0x69, 0x62, 0x63, 0x5f,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xe2,
	0xde, 0x1f, 0x09, 0x49, 0x42, 0x43, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x44, 0x52, 0x09, 0x69, 0x62,
	0x63, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x4d, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79,
	0x42, 0x19, 0xca, 0xb4, 0x2d, 0x15, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x04, 0xe8, 0xa0, 0x1f, 0x01, 0x22, 0xfb, 0x01, 0x0a,
	0x18, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x50, 0x0a, 0x09, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x63,
	0x6f, 0x73, 0x6d, 0x77, 0x61, 0x73, 0x6d, 0x2e, 0x77, 0x61, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x07, 0x63,
	0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0a, 0xe2, 0xde,
	0x1f, 0x06, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x12, 0x3e, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x77, 0x61, 0x73, 0x6d, 0x2e, 0x77, 0x61, 0x73,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x54, 0x78, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x28, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x16, 0xfa,
	0xde, 0x1f, 0x12, 0x52, 0x61, 0x77, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x52, 0x0a, 0x12, 0x41, 0x62,
	0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x54, 0x78, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x78, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x78, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x69,
	0x0a, 0x05, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x4a, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x42, 0x38, 0xfa, 0xde, 0x1f, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2f,
	0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2f, 0x6c, 0x69, 0x62, 0x73, 0x2f,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x2e, 0x48, 0x65, 0x78, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2a, 0xe9, 0x01, 0x0a, 0x0a, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x41, 0x43, 0x43, 0x45,
	0x53, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x1a, 0x19, 0x8a, 0x9d, 0x20, 0x15, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x12, 0x2c, 0x0a, 0x12, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x4e, 0x4f, 0x42, 0x4f, 0x44, 0x59, 0x10, 0x01, 0x1a, 0x14, 0x8a, 0x9d, 0x20, 0x10, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x37,
	0x0a, 0x18, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x4e,
	0x4c, 0x59, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x10, 0x02, 0x1a, 0x19, 0x8a, 0x9d,
	0x20, 0x15, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x6e, 0x6c, 0x79,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x41, 0x43, 0x43, 0x45, 0x53,
	0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x56, 0x45, 0x52, 0x59, 0x42, 0x4f, 0x44, 0x59,
	0x10, 0x03, 0x1a, 0x17, 0x8a, 0x9d, 0x20, 0x13, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x45, 0x76, 0x65, 0x72, 0x79, 0x62, 0x6f, 0x64, 0x79, 0x1a, 0x08, 0x88, 0xa3, 0x1e,
	0x00, 0xa8, 0xa4, 0x1e, 0x00, 0x2a, 0xa6, 0x03, 0x0a, 0x20, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x65, 0x0a, 0x30, 0x43, 0x4f,
	0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x48, 0x49, 0x53, 0x54,
	0x4f, 0x52, 0x59, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x1a, 0x2f, 0x8a, 0x9d, 0x20, 0x2b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x12, 0x57, 0x0a, 0x29, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x5f, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x48, 0x49, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x10, 0x01,
	0x1a, 0x28, 0x8a, 0x9d, 0x20, 0x24, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x5d, 0x0a, 0x2c, 0x43, 0x4f,
	0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x48, 0x49, 0x53, 0x54,
	0x4f, 0x52, 0x59, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x4d, 0x49, 0x47, 0x52, 0x41, 0x54, 0x45, 0x10, 0x02, 0x1a, 0x2b, 0x8a, 0x9d,
	0x20, 0x27, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x12, 0x5d, 0x0a, 0x2c, 0x43, 0x4f, 0x4e,
	0x54, 0x52, 0x41, 0x43, 0x54, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x48, 0x49, 0x53, 0x54, 0x4f,
	0x52, 0x59, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x53, 0x49, 0x53, 0x10, 0x03, 0x1a, 0x2b, 0x8a, 0x9d, 0x20,
	0x27, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x1a, 0x04, 0x88, 0xa3, 0x1e, 0x00, 0x42, 0x30,
	0xc8, 0xe1, 0x1e, 0x00, 0xa8, 0xe2, 0x1e, 0x01, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x6f, 0x73, 0x6d, 0x57, 0x61, 0x73, 0x6d, 0x2f, 0x77, 0x61,
	0x73, 0x6d, 0x64, 0x2f, 0x78, 0x2f, 0x77, 0x61, 0x73, 0x6d, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cosmwasm_wasm_v1_types_proto_rawDescOnce sync.Once
	file_cosmwasm_wasm_v1_types_proto_rawDescData = file_cosmwasm_wasm_v1_types_proto_rawDesc
)

func file_cosmwasm_wasm_v1_types_proto_rawDescGZIP() []byte {
	file_cosmwasm_wasm_v1_types_proto_rawDescOnce.Do(func() {
		file_cosmwasm_wasm_v1_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_cosmwasm_wasm_v1_types_proto_rawDescData)
	})
	return file_cosmwasm_wasm_v1_types_proto_rawDescData
}

var file_cosmwasm_wasm_v1_types_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_cosmwasm_wasm_v1_types_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_cosmwasm_wasm_v1_types_proto_goTypes = []interface{}{
	(AccessType)(0),                       // 0: cosmwasm.wasm.v1.AccessType
	(ContractCodeHistoryOperationType)(0), // 1: cosmwasm.wasm.v1.ContractCodeHistoryOperationType
	(*AccessTypeParam)(nil),               // 2: cosmwasm.wasm.v1.AccessTypeParam
	(*AccessConfig)(nil),                  // 3: cosmwasm.wasm.v1.AccessConfig
	(*Params)(nil),                        // 4: cosmwasm.wasm.v1.Params
	(*CodeInfo)(nil),                      // 5: cosmwasm.wasm.v1.CodeInfo
	(*ContractInfo)(nil),                  // 6: cosmwasm.wasm.v1.ContractInfo
	(*ContractCodeHistoryEntry)(nil),      // 7: cosmwasm.wasm.v1.ContractCodeHistoryEntry
	(*AbsoluteTxPosition)(nil),            // 8: cosmwasm.wasm.v1.AbsoluteTxPosition
	(*Model)(nil),                         // 9: cosmwasm.wasm.v1.Model
	(*any1.Any)(nil),                      // 10: google.protobuf.Any
}
var file_cosmwasm_wasm_v1_types_proto_depIdxs = []int32{
	0,  // 0: cosmwasm.wasm.v1.AccessTypeParam.value:type_name -> cosmwasm.wasm.v1.AccessType
	0,  // 1: cosmwasm.wasm.v1.AccessConfig.permission:type_name -> cosmwasm.wasm.v1.AccessType
	3,  // 2: cosmwasm.wasm.v1.Params.code_upload_access:type_name -> cosmwasm.wasm.v1.AccessConfig
	0,  // 3: cosmwasm.wasm.v1.Params.instantiate_default_permission:type_name -> cosmwasm.wasm.v1.AccessType
	3,  // 4: cosmwasm.wasm.v1.CodeInfo.instantiate_config:type_name -> cosmwasm.wasm.v1.AccessConfig
	8,  // 5: cosmwasm.wasm.v1.ContractInfo.created:type_name -> cosmwasm.wasm.v1.AbsoluteTxPosition
	10, // 6: cosmwasm.wasm.v1.ContractInfo.extension:type_name -> google.protobuf.Any
	1,  // 7: cosmwasm.wasm.v1.ContractCodeHistoryEntry.operation:type_name -> cosmwasm.wasm.v1.ContractCodeHistoryOperationType
	8,  // 8: cosmwasm.wasm.v1.ContractCodeHistoryEntry.updated:type_name -> cosmwasm.wasm.v1.AbsoluteTxPosition
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_cosmwasm_wasm_v1_types_proto_init() }
func file_cosmwasm_wasm_v1_types_proto_init() {
	if File_cosmwasm_wasm_v1_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cosmwasm_wasm_v1_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessTypeParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmwasm_wasm_v1_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmwasm_wasm_v1_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Params); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmwasm_wasm_v1_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmwasm_wasm_v1_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmwasm_wasm_v1_types_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractCodeHistoryEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmwasm_wasm_v1_types_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbsoluteTxPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmwasm_wasm_v1_types_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Model); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cosmwasm_wasm_v1_types_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cosmwasm_wasm_v1_types_proto_goTypes,
		DependencyIndexes: file_cosmwasm_wasm_v1_types_proto_depIdxs,
		EnumInfos:         file_cosmwasm_wasm_v1_types_proto_enumTypes,
		MessageInfos:      file_cosmwasm_wasm_v1_types_proto_msgTypes,
	}.Build()
	File_cosmwasm_wasm_v1_types_proto = out.File
	file_cosmwasm_wasm_v1_types_proto_rawDesc = nil
	file_cosmwasm_wasm_v1_types_proto_goTypes = nil
	file_cosmwasm_wasm_v1_types_proto_depIdxs = nil
}
