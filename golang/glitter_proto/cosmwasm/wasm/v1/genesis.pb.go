// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0-devel
// 	protoc        v3.14.0
// source: cosmwasm/wasm/v1/genesis.proto

package types

import (
	_ "github.com/gogo/protobuf/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GenesisState - genesis state of x/wasm
type GenesisState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params    *Params                 `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
	Codes     []*Code                 `protobuf:"bytes,2,rep,name=codes,proto3" json:"codes,omitempty"`
	Contracts []*Contract             `protobuf:"bytes,3,rep,name=contracts,proto3" json:"contracts,omitempty"`
	Sequences []*Sequence             `protobuf:"bytes,4,rep,name=sequences,proto3" json:"sequences,omitempty"`
	GenMsgs   []*GenesisState_GenMsgs `protobuf:"bytes,5,rep,name=gen_msgs,json=genMsgs,proto3" json:"gen_msgs,omitempty"`
}

func (x *GenesisState) Reset() {
	*x = GenesisState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmwasm_wasm_v1_genesis_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenesisState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisState) ProtoMessage() {}

func (x *GenesisState) ProtoReflect() protoreflect.Message {
	mi := &file_cosmwasm_wasm_v1_genesis_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenesisState.ProtoReflect.Descriptor instead.
func (*GenesisState) Descriptor() ([]byte, []int) {
	return file_cosmwasm_wasm_v1_genesis_proto_rawDescGZIP(), []int{0}
}

func (x *GenesisState) GetParams() *Params {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *GenesisState) GetCodes() []*Code {
	if x != nil {
		return x.Codes
	}
	return nil
}

func (x *GenesisState) GetContracts() []*Contract {
	if x != nil {
		return x.Contracts
	}
	return nil
}

func (x *GenesisState) GetSequences() []*Sequence {
	if x != nil {
		return x.Sequences
	}
	return nil
}

func (x *GenesisState) GetGenMsgs() []*GenesisState_GenMsgs {
	if x != nil {
		return x.GenMsgs
	}
	return nil
}

// Code struct encompasses CodeInfo and CodeBytes
type Code struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CodeId    uint64    `protobuf:"varint,1,opt,name=code_id,json=codeId,proto3" json:"code_id,omitempty"`
	CodeInfo  *CodeInfo `protobuf:"bytes,2,opt,name=code_info,json=codeInfo,proto3" json:"code_info,omitempty"`
	CodeBytes []byte    `protobuf:"bytes,3,opt,name=code_bytes,json=codeBytes,proto3" json:"code_bytes,omitempty"`
	// Pinned to wasmvm cache
	Pinned bool `protobuf:"varint,4,opt,name=pinned,proto3" json:"pinned,omitempty"`
}

func (x *Code) Reset() {
	*x = Code{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmwasm_wasm_v1_genesis_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Code) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Code) ProtoMessage() {}

func (x *Code) ProtoReflect() protoreflect.Message {
	mi := &file_cosmwasm_wasm_v1_genesis_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Code.ProtoReflect.Descriptor instead.
func (*Code) Descriptor() ([]byte, []int) {
	return file_cosmwasm_wasm_v1_genesis_proto_rawDescGZIP(), []int{1}
}

func (x *Code) GetCodeId() uint64 {
	if x != nil {
		return x.CodeId
	}
	return 0
}

func (x *Code) GetCodeInfo() *CodeInfo {
	if x != nil {
		return x.CodeInfo
	}
	return nil
}

func (x *Code) GetCodeBytes() []byte {
	if x != nil {
		return x.CodeBytes
	}
	return nil
}

func (x *Code) GetPinned() bool {
	if x != nil {
		return x.Pinned
	}
	return false
}

// Contract struct encompasses ContractAddress, ContractInfo, and ContractState
type Contract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractAddress string        `protobuf:"bytes,1,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	ContractInfo    *ContractInfo `protobuf:"bytes,2,opt,name=contract_info,json=contractInfo,proto3" json:"contract_info,omitempty"`
	ContractState   []*Model      `protobuf:"bytes,3,rep,name=contract_state,json=contractState,proto3" json:"contract_state,omitempty"`
}

func (x *Contract) Reset() {
	*x = Contract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmwasm_wasm_v1_genesis_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contract) ProtoMessage() {}

func (x *Contract) ProtoReflect() protoreflect.Message {
	mi := &file_cosmwasm_wasm_v1_genesis_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contract.ProtoReflect.Descriptor instead.
func (*Contract) Descriptor() ([]byte, []int) {
	return file_cosmwasm_wasm_v1_genesis_proto_rawDescGZIP(), []int{2}
}

func (x *Contract) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *Contract) GetContractInfo() *ContractInfo {
	if x != nil {
		return x.ContractInfo
	}
	return nil
}

func (x *Contract) GetContractState() []*Model {
	if x != nil {
		return x.ContractState
	}
	return nil
}

// Sequence key and value of an id generation counter
type Sequence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdKey []byte `protobuf:"bytes,1,opt,name=id_key,json=idKey,proto3" json:"id_key,omitempty"`
	Value uint64 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Sequence) Reset() {
	*x = Sequence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmwasm_wasm_v1_genesis_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sequence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sequence) ProtoMessage() {}

func (x *Sequence) ProtoReflect() protoreflect.Message {
	mi := &file_cosmwasm_wasm_v1_genesis_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sequence.ProtoReflect.Descriptor instead.
func (*Sequence) Descriptor() ([]byte, []int) {
	return file_cosmwasm_wasm_v1_genesis_proto_rawDescGZIP(), []int{3}
}

func (x *Sequence) GetIdKey() []byte {
	if x != nil {
		return x.IdKey
	}
	return nil
}

func (x *Sequence) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// GenMsgs define the messages that can be executed during genesis phase in
// order. The intention is to have more human readable data that is auditable.
type GenesisState_GenMsgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// sum is a single message
	//
	// Types that are assignable to Sum:
	//
	//	*GenesisState_GenMsgs_StoreCode
	//	*GenesisState_GenMsgs_InstantiateContract
	//	*GenesisState_GenMsgs_ExecuteContract
	Sum isGenesisState_GenMsgs_Sum `protobuf_oneof:"sum"`
}

func (x *GenesisState_GenMsgs) Reset() {
	*x = GenesisState_GenMsgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmwasm_wasm_v1_genesis_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenesisState_GenMsgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisState_GenMsgs) ProtoMessage() {}

func (x *GenesisState_GenMsgs) ProtoReflect() protoreflect.Message {
	mi := &file_cosmwasm_wasm_v1_genesis_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenesisState_GenMsgs.ProtoReflect.Descriptor instead.
func (*GenesisState_GenMsgs) Descriptor() ([]byte, []int) {
	return file_cosmwasm_wasm_v1_genesis_proto_rawDescGZIP(), []int{0, 0}
}

func (m *GenesisState_GenMsgs) GetSum() isGenesisState_GenMsgs_Sum {
	if m != nil {
		return m.Sum
	}
	return nil
}

func (x *GenesisState_GenMsgs) GetStoreCode() *MsgStoreCode {
	if x, ok := x.GetSum().(*GenesisState_GenMsgs_StoreCode); ok {
		return x.StoreCode
	}
	return nil
}

func (x *GenesisState_GenMsgs) GetInstantiateContract() *MsgInstantiateContract {
	if x, ok := x.GetSum().(*GenesisState_GenMsgs_InstantiateContract); ok {
		return x.InstantiateContract
	}
	return nil
}

func (x *GenesisState_GenMsgs) GetExecuteContract() *MsgExecuteContract {
	if x, ok := x.GetSum().(*GenesisState_GenMsgs_ExecuteContract); ok {
		return x.ExecuteContract
	}
	return nil
}

type isGenesisState_GenMsgs_Sum interface {
	isGenesisState_GenMsgs_Sum()
}

type GenesisState_GenMsgs_StoreCode struct {
	StoreCode *MsgStoreCode `protobuf:"bytes,1,opt,name=store_code,json=storeCode,proto3,oneof"`
}

type GenesisState_GenMsgs_InstantiateContract struct {
	InstantiateContract *MsgInstantiateContract `protobuf:"bytes,2,opt,name=instantiate_contract,json=instantiateContract,proto3,oneof"`
}

type GenesisState_GenMsgs_ExecuteContract struct {
	ExecuteContract *MsgExecuteContract `protobuf:"bytes,3,opt,name=execute_contract,json=executeContract,proto3,oneof"`
}

func (*GenesisState_GenMsgs_StoreCode) isGenesisState_GenMsgs_Sum() {}

func (*GenesisState_GenMsgs_InstantiateContract) isGenesisState_GenMsgs_Sum() {}

func (*GenesisState_GenMsgs_ExecuteContract) isGenesisState_GenMsgs_Sum() {}

var File_cosmwasm_wasm_v1_genesis_proto protoreflect.FileDescriptor

var file_cosmwasm_wasm_v1_genesis_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x63, 0x6f, 0x73, 0x6d, 0x77, 0x61, 0x73, 0x6d, 0x2f, 0x77, 0x61, 0x73, 0x6d, 0x2f,
	0x76, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x10, 0x63, 0x6f, 0x73, 0x6d, 0x77, 0x61, 0x73, 0x6d, 0x2e, 0x77, 0x61, 0x73, 0x6d, 0x2e,
	0x76, 0x31, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f,
	0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x63, 0x6f, 0x73, 0x6d, 0x77, 0x61,
	0x73, 0x6d, 0x2f, 0x77, 0x61, 0x73, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x63, 0x6f, 0x73, 0x6d, 0x77, 0x61, 0x73, 0x6d,
	0x2f, 0x77, 0x61, 0x73, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xa0, 0x05, 0x0a, 0x0c, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x77, 0x61, 0x73, 0x6d, 0x2e, 0x77, 0x61,
	0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x42, 0x04, 0xc8, 0xde,
	0x1f, 0x00, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x45, 0x0a, 0x05, 0x63, 0x6f,
	0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x73, 0x6d,
	0x77, 0x61, 0x73, 0x6d, 0x2e, 0x77, 0x61, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x42, 0x17, 0xc8, 0xde, 0x1f, 0x00, 0xea, 0xde, 0x1f, 0x0f, 0x63, 0x6f, 0x64, 0x65, 0x73,
	0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65,
	0x73, 0x12, 0x55, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x77, 0x61, 0x73, 0x6d, 0x2e,
	0x77, 0x61, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x42, 0x1b, 0xc8, 0xde, 0x1f, 0x00, 0xea, 0xde, 0x1f, 0x13, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x73, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x09, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x12, 0x55, 0x0a, 0x09, 0x73, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f,
	0x73, 0x6d, 0x77, 0x61, 0x73, 0x6d, 0x2e, 0x77, 0x61, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x1b, 0xc8, 0xde, 0x1f, 0x00, 0xea, 0xde, 0x1f,
	0x13, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x52, 0x09, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12,
	0x5d, 0x0a, 0x08, 0x67, 0x65, 0x6e, 0x5f, 0x6d, 0x73, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x77, 0x61, 0x73, 0x6d, 0x2e, 0x77, 0x61, 0x73,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x47, 0x65, 0x6e, 0x4d, 0x73, 0x67, 0x73, 0x42, 0x1a, 0xc8, 0xde, 0x1f, 0x00, 0xea,
	0xde, 0x1f, 0x12, 0x67, 0x65, 0x6e, 0x5f, 0x6d, 0x73, 0x67, 0x73, 0x2c, 0x6f, 0x6d, 0x69, 0x74,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x07, 0x67, 0x65, 0x6e, 0x4d, 0x73, 0x67, 0x73, 0x1a, 0x83,
	0x02, 0x0a, 0x07, 0x47, 0x65, 0x6e, 0x4d, 0x73, 0x67, 0x73, 0x12, 0x3f, 0x0a, 0x0a, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x77, 0x61, 0x73, 0x6d, 0x2e, 0x77, 0x61, 0x73, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x48, 0x00,
	0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x5d, 0x0a, 0x14, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x73, 0x6d,
	0x77, 0x61, 0x73, 0x6d, 0x2e, 0x77, 0x61, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x48, 0x00, 0x52, 0x13, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x51, 0x0a, 0x10, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x77, 0x61, 0x73, 0x6d, 0x2e,
	0x77, 0x61, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x42, 0x05, 0x0a,
	0x03, 0x73, 0x75, 0x6d, 0x22, 0xa1, 0x01, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a,
	0x07, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0a,
	0xe2, 0xde, 0x1f, 0x06, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x12, 0x3d, 0x0a, 0x09, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x77, 0x61, 0x73, 0x6d,
	0x2e, 0x77, 0x61, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x70, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x22, 0xc6, 0x01, 0x0a, 0x08, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x49, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x77, 0x61,
	0x73, 0x6d, 0x2e, 0x77, 0x61, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0c, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x44, 0x0a, 0x0e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x77, 0x61, 0x73, 0x6d, 0x2e, 0x77,
	0x61, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x42, 0x04, 0xc8, 0xde,
	0x1f, 0x00, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x22, 0x42, 0x0a, 0x08, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x20, 0x0a,
	0x06, 0x69, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x09, 0xe2,
	0xde, 0x1f, 0x05, 0x49, 0x44, 0x4b, 0x65, 0x79, 0x52, 0x05, 0x69, 0x64, 0x4b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x6f, 0x73, 0x6d, 0x57, 0x61, 0x73, 0x6d, 0x2f, 0x77, 0x61, 0x73,
	0x6d, 0x64, 0x2f, 0x78, 0x2f, 0x77, 0x61, 0x73, 0x6d, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cosmwasm_wasm_v1_genesis_proto_rawDescOnce sync.Once
	file_cosmwasm_wasm_v1_genesis_proto_rawDescData = file_cosmwasm_wasm_v1_genesis_proto_rawDesc
)

func file_cosmwasm_wasm_v1_genesis_proto_rawDescGZIP() []byte {
	file_cosmwasm_wasm_v1_genesis_proto_rawDescOnce.Do(func() {
		file_cosmwasm_wasm_v1_genesis_proto_rawDescData = protoimpl.X.CompressGZIP(file_cosmwasm_wasm_v1_genesis_proto_rawDescData)
	})
	return file_cosmwasm_wasm_v1_genesis_proto_rawDescData
}

var file_cosmwasm_wasm_v1_genesis_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_cosmwasm_wasm_v1_genesis_proto_goTypes = []interface{}{
	(*GenesisState)(nil),           // 0: cosmwasm.wasm.v1.GenesisState
	(*Code)(nil),                   // 1: cosmwasm.wasm.v1.Code
	(*Contract)(nil),               // 2: cosmwasm.wasm.v1.Contract
	(*Sequence)(nil),               // 3: cosmwasm.wasm.v1.Sequence
	(*GenesisState_GenMsgs)(nil),   // 4: cosmwasm.wasm.v1.GenesisState.GenMsgs
	(*Params)(nil),                 // 5: cosmwasm.wasm.v1.Params
	(*CodeInfo)(nil),               // 6: cosmwasm.wasm.v1.CodeInfo
	(*ContractInfo)(nil),           // 7: cosmwasm.wasm.v1.ContractInfo
	(*Model)(nil),                  // 8: cosmwasm.wasm.v1.Model
	(*MsgStoreCode)(nil),           // 9: cosmwasm.wasm.v1.MsgStoreCode
	(*MsgInstantiateContract)(nil), // 10: cosmwasm.wasm.v1.MsgInstantiateContract
	(*MsgExecuteContract)(nil),     // 11: cosmwasm.wasm.v1.MsgExecuteContract
}
var file_cosmwasm_wasm_v1_genesis_proto_depIdxs = []int32{
	5,  // 0: cosmwasm.wasm.v1.GenesisState.params:type_name -> cosmwasm.wasm.v1.Params
	1,  // 1: cosmwasm.wasm.v1.GenesisState.codes:type_name -> cosmwasm.wasm.v1.Code
	2,  // 2: cosmwasm.wasm.v1.GenesisState.contracts:type_name -> cosmwasm.wasm.v1.Contract
	3,  // 3: cosmwasm.wasm.v1.GenesisState.sequences:type_name -> cosmwasm.wasm.v1.Sequence
	4,  // 4: cosmwasm.wasm.v1.GenesisState.gen_msgs:type_name -> cosmwasm.wasm.v1.GenesisState.GenMsgs
	6,  // 5: cosmwasm.wasm.v1.Code.code_info:type_name -> cosmwasm.wasm.v1.CodeInfo
	7,  // 6: cosmwasm.wasm.v1.Contract.contract_info:type_name -> cosmwasm.wasm.v1.ContractInfo
	8,  // 7: cosmwasm.wasm.v1.Contract.contract_state:type_name -> cosmwasm.wasm.v1.Model
	9,  // 8: cosmwasm.wasm.v1.GenesisState.GenMsgs.store_code:type_name -> cosmwasm.wasm.v1.MsgStoreCode
	10, // 9: cosmwasm.wasm.v1.GenesisState.GenMsgs.instantiate_contract:type_name -> cosmwasm.wasm.v1.MsgInstantiateContract
	11, // 10: cosmwasm.wasm.v1.GenesisState.GenMsgs.execute_contract:type_name -> cosmwasm.wasm.v1.MsgExecuteContract
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_cosmwasm_wasm_v1_genesis_proto_init() }
func file_cosmwasm_wasm_v1_genesis_proto_init() {
	if File_cosmwasm_wasm_v1_genesis_proto != nil {
		return
	}
	file_cosmwasm_wasm_v1_types_proto_init()
	file_cosmwasm_wasm_v1_tx_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cosmwasm_wasm_v1_genesis_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenesisState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmwasm_wasm_v1_genesis_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Code); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmwasm_wasm_v1_genesis_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmwasm_wasm_v1_genesis_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sequence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmwasm_wasm_v1_genesis_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenesisState_GenMsgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cosmwasm_wasm_v1_genesis_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*GenesisState_GenMsgs_StoreCode)(nil),
		(*GenesisState_GenMsgs_InstantiateContract)(nil),
		(*GenesisState_GenMsgs_ExecuteContract)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cosmwasm_wasm_v1_genesis_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cosmwasm_wasm_v1_genesis_proto_goTypes,
		DependencyIndexes: file_cosmwasm_wasm_v1_genesis_proto_depIdxs,
		MessageInfos:      file_cosmwasm_wasm_v1_genesis_proto_msgTypes,
	}.Build()
	File_cosmwasm_wasm_v1_genesis_proto = out.File
	file_cosmwasm_wasm_v1_genesis_proto_rawDesc = nil
	file_cosmwasm_wasm_v1_genesis_proto_goTypes = nil
	file_cosmwasm_wasm_v1_genesis_proto_depIdxs = nil
}
