// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0-devel
// 	protoc        v3.14.0
// source: cosmwasm/wasm/v1/proposal.proto

package types

import (
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// StoreCodeProposal gov proposal content type to submit WASM code to the system
type StoreCodeProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Title is a short summary
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// Description is a human readable text
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// RunAs is the address that is passed to the contract's environment as sender
	RunAs string `protobuf:"bytes,3,opt,name=run_as,json=runAs,proto3" json:"run_as,omitempty"`
	// WASMByteCode can be raw or gzip compressed
	WasmByteCode []byte `protobuf:"bytes,4,opt,name=wasm_byte_code,json=wasmByteCode,proto3" json:"wasm_byte_code,omitempty"`
	// InstantiatePermission to apply on contract creation, optional
	InstantiatePermission *AccessConfig `protobuf:"bytes,7,opt,name=instantiate_permission,json=instantiatePermission,proto3" json:"instantiate_permission,omitempty"`
}

func (x *StoreCodeProposal) Reset() {
	*x = StoreCodeProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmwasm_wasm_v1_proposal_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreCodeProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreCodeProposal) ProtoMessage() {}

func (x *StoreCodeProposal) ProtoReflect() protoreflect.Message {
	mi := &file_cosmwasm_wasm_v1_proposal_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreCodeProposal.ProtoReflect.Descriptor instead.
func (*StoreCodeProposal) Descriptor() ([]byte, []int) {
	return file_cosmwasm_wasm_v1_proposal_proto_rawDescGZIP(), []int{0}
}

func (x *StoreCodeProposal) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *StoreCodeProposal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *StoreCodeProposal) GetRunAs() string {
	if x != nil {
		return x.RunAs
	}
	return ""
}

func (x *StoreCodeProposal) GetWasmByteCode() []byte {
	if x != nil {
		return x.WasmByteCode
	}
	return nil
}

func (x *StoreCodeProposal) GetInstantiatePermission() *AccessConfig {
	if x != nil {
		return x.InstantiatePermission
	}
	return nil
}

// InstantiateContractProposal gov proposal content type to instantiate a
// contract.
type InstantiateContractProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Title is a short summary
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// Description is a human readable text
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// RunAs is the address that is passed to the contract's environment as sender
	RunAs string `protobuf:"bytes,3,opt,name=run_as,json=runAs,proto3" json:"run_as,omitempty"`
	// Admin is an optional address that can execute migrations
	Admin string `protobuf:"bytes,4,opt,name=admin,proto3" json:"admin,omitempty"`
	// CodeID is the reference to the stored WASM code
	CodeId uint64 `protobuf:"varint,5,opt,name=code_id,json=codeId,proto3" json:"code_id,omitempty"`
	// Label is optional metadata to be stored with a constract instance.
	Label string `protobuf:"bytes,6,opt,name=label,proto3" json:"label,omitempty"`
	// Msg json encoded message to be passed to the contract on instantiation
	Msg []byte `protobuf:"bytes,7,opt,name=msg,proto3" json:"msg,omitempty"`
	// Funds coins that are transferred to the contract on instantiation
	Funds []*types.Coin `protobuf:"bytes,8,rep,name=funds,proto3" json:"funds,omitempty"`
}

func (x *InstantiateContractProposal) Reset() {
	*x = InstantiateContractProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmwasm_wasm_v1_proposal_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstantiateContractProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstantiateContractProposal) ProtoMessage() {}

func (x *InstantiateContractProposal) ProtoReflect() protoreflect.Message {
	mi := &file_cosmwasm_wasm_v1_proposal_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstantiateContractProposal.ProtoReflect.Descriptor instead.
func (*InstantiateContractProposal) Descriptor() ([]byte, []int) {
	return file_cosmwasm_wasm_v1_proposal_proto_rawDescGZIP(), []int{1}
}

func (x *InstantiateContractProposal) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *InstantiateContractProposal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *InstantiateContractProposal) GetRunAs() string {
	if x != nil {
		return x.RunAs
	}
	return ""
}

func (x *InstantiateContractProposal) GetAdmin() string {
	if x != nil {
		return x.Admin
	}
	return ""
}

func (x *InstantiateContractProposal) GetCodeId() uint64 {
	if x != nil {
		return x.CodeId
	}
	return 0
}

func (x *InstantiateContractProposal) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *InstantiateContractProposal) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *InstantiateContractProposal) GetFunds() []*types.Coin {
	if x != nil {
		return x.Funds
	}
	return nil
}

// MigrateContractProposal gov proposal content type to migrate a contract.
type MigrateContractProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Title is a short summary
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// Description is a human readable text
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"` // Note: skipping 3 as this was previously used for unneeded run_as
	// Contract is the address of the smart contract
	Contract string `protobuf:"bytes,4,opt,name=contract,proto3" json:"contract,omitempty"`
	// CodeID references the new WASM code
	CodeId uint64 `protobuf:"varint,5,opt,name=code_id,json=codeId,proto3" json:"code_id,omitempty"`
	// Msg json encoded message to be passed to the contract on migration
	Msg []byte `protobuf:"bytes,6,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *MigrateContractProposal) Reset() {
	*x = MigrateContractProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmwasm_wasm_v1_proposal_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MigrateContractProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrateContractProposal) ProtoMessage() {}

func (x *MigrateContractProposal) ProtoReflect() protoreflect.Message {
	mi := &file_cosmwasm_wasm_v1_proposal_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrateContractProposal.ProtoReflect.Descriptor instead.
func (*MigrateContractProposal) Descriptor() ([]byte, []int) {
	return file_cosmwasm_wasm_v1_proposal_proto_rawDescGZIP(), []int{2}
}

func (x *MigrateContractProposal) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MigrateContractProposal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MigrateContractProposal) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *MigrateContractProposal) GetCodeId() uint64 {
	if x != nil {
		return x.CodeId
	}
	return 0
}

func (x *MigrateContractProposal) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

// SudoContractProposal gov proposal content type to call sudo on a contract.
type SudoContractProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Title is a short summary
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// Description is a human readable text
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Contract is the address of the smart contract
	Contract string `protobuf:"bytes,3,opt,name=contract,proto3" json:"contract,omitempty"`
	// Msg json encoded message to be passed to the contract as sudo
	Msg []byte `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SudoContractProposal) Reset() {
	*x = SudoContractProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmwasm_wasm_v1_proposal_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SudoContractProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SudoContractProposal) ProtoMessage() {}

func (x *SudoContractProposal) ProtoReflect() protoreflect.Message {
	mi := &file_cosmwasm_wasm_v1_proposal_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SudoContractProposal.ProtoReflect.Descriptor instead.
func (*SudoContractProposal) Descriptor() ([]byte, []int) {
	return file_cosmwasm_wasm_v1_proposal_proto_rawDescGZIP(), []int{3}
}

func (x *SudoContractProposal) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SudoContractProposal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SudoContractProposal) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *SudoContractProposal) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

// ExecuteContractProposal gov proposal content type to call execute on a
// contract.
type ExecuteContractProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Title is a short summary
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// Description is a human readable text
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// RunAs is the address that is passed to the contract's environment as sender
	RunAs string `protobuf:"bytes,3,opt,name=run_as,json=runAs,proto3" json:"run_as,omitempty"`
	// Contract is the address of the smart contract
	Contract string `protobuf:"bytes,4,opt,name=contract,proto3" json:"contract,omitempty"`
	// Msg json encoded message to be passed to the contract as execute
	Msg []byte `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
	// Funds coins that are transferred to the contract on instantiation
	Funds []*types.Coin `protobuf:"bytes,6,rep,name=funds,proto3" json:"funds,omitempty"`
}

func (x *ExecuteContractProposal) Reset() {
	*x = ExecuteContractProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmwasm_wasm_v1_proposal_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteContractProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteContractProposal) ProtoMessage() {}

func (x *ExecuteContractProposal) ProtoReflect() protoreflect.Message {
	mi := &file_cosmwasm_wasm_v1_proposal_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteContractProposal.ProtoReflect.Descriptor instead.
func (*ExecuteContractProposal) Descriptor() ([]byte, []int) {
	return file_cosmwasm_wasm_v1_proposal_proto_rawDescGZIP(), []int{4}
}

func (x *ExecuteContractProposal) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ExecuteContractProposal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ExecuteContractProposal) GetRunAs() string {
	if x != nil {
		return x.RunAs
	}
	return ""
}

func (x *ExecuteContractProposal) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *ExecuteContractProposal) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *ExecuteContractProposal) GetFunds() []*types.Coin {
	if x != nil {
		return x.Funds
	}
	return nil
}

// UpdateAdminProposal gov proposal content type to set an admin for a contract.
type UpdateAdminProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Title is a short summary
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// Description is a human readable text
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// NewAdmin address to be set
	NewAdmin string `protobuf:"bytes,3,opt,name=new_admin,json=newAdmin,proto3" json:"new_admin,omitempty"`
	// Contract is the address of the smart contract
	Contract string `protobuf:"bytes,4,opt,name=contract,proto3" json:"contract,omitempty"`
}

func (x *UpdateAdminProposal) Reset() {
	*x = UpdateAdminProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmwasm_wasm_v1_proposal_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAdminProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAdminProposal) ProtoMessage() {}

func (x *UpdateAdminProposal) ProtoReflect() protoreflect.Message {
	mi := &file_cosmwasm_wasm_v1_proposal_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAdminProposal.ProtoReflect.Descriptor instead.
func (*UpdateAdminProposal) Descriptor() ([]byte, []int) {
	return file_cosmwasm_wasm_v1_proposal_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateAdminProposal) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateAdminProposal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateAdminProposal) GetNewAdmin() string {
	if x != nil {
		return x.NewAdmin
	}
	return ""
}

func (x *UpdateAdminProposal) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

// ClearAdminProposal gov proposal content type to clear the admin of a
// contract.
type ClearAdminProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Title is a short summary
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// Description is a human readable text
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Contract is the address of the smart contract
	Contract string `protobuf:"bytes,3,opt,name=contract,proto3" json:"contract,omitempty"`
}

func (x *ClearAdminProposal) Reset() {
	*x = ClearAdminProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmwasm_wasm_v1_proposal_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearAdminProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearAdminProposal) ProtoMessage() {}

func (x *ClearAdminProposal) ProtoReflect() protoreflect.Message {
	mi := &file_cosmwasm_wasm_v1_proposal_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearAdminProposal.ProtoReflect.Descriptor instead.
func (*ClearAdminProposal) Descriptor() ([]byte, []int) {
	return file_cosmwasm_wasm_v1_proposal_proto_rawDescGZIP(), []int{6}
}

func (x *ClearAdminProposal) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ClearAdminProposal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ClearAdminProposal) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

// PinCodesProposal gov proposal content type to pin a set of code ids in the
// wasmvm cache.
type PinCodesProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Title is a short summary
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// Description is a human readable text
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// CodeIDs references the new WASM codes
	CodeIds []uint64 `protobuf:"varint,3,rep,packed,name=code_ids,json=codeIds,proto3" json:"code_ids,omitempty"`
}

func (x *PinCodesProposal) Reset() {
	*x = PinCodesProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmwasm_wasm_v1_proposal_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PinCodesProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PinCodesProposal) ProtoMessage() {}

func (x *PinCodesProposal) ProtoReflect() protoreflect.Message {
	mi := &file_cosmwasm_wasm_v1_proposal_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PinCodesProposal.ProtoReflect.Descriptor instead.
func (*PinCodesProposal) Descriptor() ([]byte, []int) {
	return file_cosmwasm_wasm_v1_proposal_proto_rawDescGZIP(), []int{7}
}

func (x *PinCodesProposal) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PinCodesProposal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PinCodesProposal) GetCodeIds() []uint64 {
	if x != nil {
		return x.CodeIds
	}
	return nil
}

// UnpinCodesProposal gov proposal content type to unpin a set of code ids in
// the wasmvm cache.
type UnpinCodesProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Title is a short summary
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// Description is a human readable text
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// CodeIDs references the WASM codes
	CodeIds []uint64 `protobuf:"varint,3,rep,packed,name=code_ids,json=codeIds,proto3" json:"code_ids,omitempty"`
}

func (x *UnpinCodesProposal) Reset() {
	*x = UnpinCodesProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmwasm_wasm_v1_proposal_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnpinCodesProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpinCodesProposal) ProtoMessage() {}

func (x *UnpinCodesProposal) ProtoReflect() protoreflect.Message {
	mi := &file_cosmwasm_wasm_v1_proposal_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpinCodesProposal.ProtoReflect.Descriptor instead.
func (*UnpinCodesProposal) Descriptor() ([]byte, []int) {
	return file_cosmwasm_wasm_v1_proposal_proto_rawDescGZIP(), []int{8}
}

func (x *UnpinCodesProposal) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UnpinCodesProposal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UnpinCodesProposal) GetCodeIds() []uint64 {
	if x != nil {
		return x.CodeIds
	}
	return nil
}

// AccessConfigUpdate contains the code id and the access config to be
// applied.
type AccessConfigUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// CodeID is the reference to the stored WASM code to be updated
	CodeId uint64 `protobuf:"varint,1,opt,name=code_id,json=codeId,proto3" json:"code_id,omitempty"`
	// InstantiatePermission to apply to the set of code ids
	InstantiatePermission *AccessConfig `protobuf:"bytes,2,opt,name=instantiate_permission,json=instantiatePermission,proto3" json:"instantiate_permission,omitempty"`
}

func (x *AccessConfigUpdate) Reset() {
	*x = AccessConfigUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmwasm_wasm_v1_proposal_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessConfigUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessConfigUpdate) ProtoMessage() {}

func (x *AccessConfigUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_cosmwasm_wasm_v1_proposal_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessConfigUpdate.ProtoReflect.Descriptor instead.
func (*AccessConfigUpdate) Descriptor() ([]byte, []int) {
	return file_cosmwasm_wasm_v1_proposal_proto_rawDescGZIP(), []int{9}
}

func (x *AccessConfigUpdate) GetCodeId() uint64 {
	if x != nil {
		return x.CodeId
	}
	return 0
}

func (x *AccessConfigUpdate) GetInstantiatePermission() *AccessConfig {
	if x != nil {
		return x.InstantiatePermission
	}
	return nil
}

// UpdateInstantiateConfigProposal gov proposal content type to update
// instantiate config to a  set of code ids.
type UpdateInstantiateConfigProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Title is a short summary
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// Description is a human readable text
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// AccessConfigUpdate contains the list of code ids and the access config
	// to be applied.
	AccessConfigUpdates []*AccessConfigUpdate `protobuf:"bytes,3,rep,name=access_config_updates,json=accessConfigUpdates,proto3" json:"access_config_updates,omitempty"`
}

func (x *UpdateInstantiateConfigProposal) Reset() {
	*x = UpdateInstantiateConfigProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmwasm_wasm_v1_proposal_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInstantiateConfigProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInstantiateConfigProposal) ProtoMessage() {}

func (x *UpdateInstantiateConfigProposal) ProtoReflect() protoreflect.Message {
	mi := &file_cosmwasm_wasm_v1_proposal_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInstantiateConfigProposal.ProtoReflect.Descriptor instead.
func (*UpdateInstantiateConfigProposal) Descriptor() ([]byte, []int) {
	return file_cosmwasm_wasm_v1_proposal_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateInstantiateConfigProposal) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateInstantiateConfigProposal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateInstantiateConfigProposal) GetAccessConfigUpdates() []*AccessConfigUpdate {
	if x != nil {
		return x.AccessConfigUpdates
	}
	return nil
}

var File_cosmwasm_wasm_v1_proposal_proto protoreflect.FileDescriptor

var file_cosmwasm_wasm_v1_proposal_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x63, 0x6f, 0x73, 0x6d, 0x77, 0x61, 0x73, 0x6d, 0x2f, 0x77, 0x61, 0x73, 0x6d, 0x2f,
	0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x10, 0x63, 0x6f, 0x73, 0x6d, 0x77, 0x61, 0x73, 0x6d, 0x2e, 0x77, 0x61, 0x73, 0x6d,
	0x2e, 0x76, 0x31, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67,
	0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x63,
	0x6f, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x63, 0x6f, 0x73, 0x6d, 0x77,
	0x61, 0x73, 0x6d, 0x2f, 0x77, 0x61, 0x73, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfd, 0x01, 0x0a, 0x11, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x75, 0x6e, 0x5f, 0x61, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x75, 0x6e, 0x41, 0x73, 0x12, 0x36, 0x0a, 0x0e,
	0x77, 0x61, 0x73, 0x6d, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x42, 0x10, 0xe2, 0xde, 0x1f, 0x0c, 0x57, 0x41, 0x53, 0x4d, 0x42, 0x79,
	0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0c, 0x77, 0x61, 0x73, 0x6d, 0x42, 0x79, 0x74, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x55, 0x0a, 0x16, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69,
	0x61, 0x74, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x77, 0x61, 0x73, 0x6d, 0x2e,
	0x77, 0x61, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x15, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x61, 0x74,
	0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4a, 0x04, 0x08, 0x05, 0x10,
	0x06, 0x4a, 0x04, 0x08, 0x06, 0x10, 0x07, 0x22, 0xca, 0x02, 0x0a, 0x1b, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x69, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x15, 0x0a, 0x06, 0x72, 0x75, 0x6e, 0x5f, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x72, 0x75, 0x6e, 0x41, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x23, 0x0a, 0x07,
	0x63, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0a, 0xe2,
	0xde, 0x1f, 0x06, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x28, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0c, 0x42, 0x16, 0xfa, 0xde, 0x1f, 0x12, 0x52, 0x61, 0x77, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x61, 0x0a, 0x05, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x30, 0xc8, 0xde, 0x1f,
	0x00, 0xaa, 0xdf, 0x1f, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64,
	0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x05, 0x66,
	0x75, 0x6e, 0x64, 0x73, 0x22, 0xbc, 0x01, 0x0a, 0x17, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0a, 0xe2, 0xde, 0x1f, 0x06, 0x43, 0x6f, 0x64, 0x65, 0x49,
	0x44, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x16, 0xfa, 0xde, 0x1f, 0x12, 0x52, 0x61, 0x77, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x22, 0x94, 0x01, 0x0a, 0x14, 0x53, 0x75, 0x64, 0x6f, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x12, 0x28, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x16, 0xfa,
	0xde, 0x1f, 0x12, 0x52, 0x61, 0x77, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x91, 0x02, 0x0a, 0x17, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15,
	0x0a, 0x06, 0x72, 0x75, 0x6e, 0x5f, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x72, 0x75, 0x6e, 0x41, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x12, 0x28, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x16,
	0xfa, 0xde, 0x1f, 0x12, 0x52, 0x61, 0x77, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x61, 0x0a, 0x05, 0x66,
	0x75, 0x6e, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x30, 0xc8, 0xde, 0x1f, 0x00, 0xaa, 0xdf, 0x1f, 0x28, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x05, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x22, 0x9c,
	0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31,
	0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x14, 0xf2, 0xde, 0x1f, 0x10, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x6e, 0x65, 0x77,
	0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x22, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x22, 0x68, 0x0a,
	0x12, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x22, 0xaf, 0x01, 0x0a, 0x10, 0x50, 0x69, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xf2, 0xde, 0x1f,
	0x0c, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0xf2, 0xde, 0x1f, 0x12, 0x79,
	0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39,
	0x0a, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04,
	0x42, 0x1e, 0xe2, 0xde, 0x1f, 0x07, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x73, 0xf2, 0xde, 0x1f,
	0x0f, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x22,
	0x52, 0x07, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x73, 0x22, 0xb1, 0x01, 0x0a, 0x12, 0x55, 0x6e,
	0x70, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x12, 0x26, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x10, 0xf2, 0xde, 0x1f, 0x0c, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x22, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0xf2,
	0xde, 0x1f, 0x12, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x04, 0x42, 0x1e, 0xe2, 0xde, 0x1f, 0x07, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x44,
	0x73, 0xf2, 0xde, 0x1f, 0x0f, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x63, 0x6f, 0x64, 0x65, 0x5f,
	0x69, 0x64, 0x73, 0x22, 0x52, 0x07, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x73, 0x22, 0x96, 0x01,
	0x0a, 0x12, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x07, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0a, 0xe2, 0xde, 0x1f, 0x06, 0x43, 0x6f, 0x64, 0x65, 0x49,
	0x44, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x5b, 0x0a, 0x16, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x69, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x73, 0x6d,
	0x77, 0x61, 0x73, 0x6d, 0x2e, 0x77, 0x61, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52,
	0x15, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xe3, 0x01, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xf2, 0xde, 0x1f, 0x0c, 0x79,
	0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0xf2, 0xde, 0x1f, 0x12, 0x79, 0x61, 0x6d,
	0x6c, 0x3a, 0x22, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5e, 0x0a, 0x15,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f,
	0x73, 0x6d, 0x77, 0x61, 0x73, 0x6d, 0x2e, 0x77, 0x61, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x13, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x42, 0x34, 0xc8, 0xe1,
	0x1e, 0x00, 0xd8, 0xe1, 0x1e, 0x00, 0xa8, 0xe2, 0x1e, 0x01, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x6f, 0x73, 0x6d, 0x57, 0x61, 0x73, 0x6d, 0x2f,
	0x77, 0x61, 0x73, 0x6d, 0x64, 0x2f, 0x78, 0x2f, 0x77, 0x61, 0x73, 0x6d, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cosmwasm_wasm_v1_proposal_proto_rawDescOnce sync.Once
	file_cosmwasm_wasm_v1_proposal_proto_rawDescData = file_cosmwasm_wasm_v1_proposal_proto_rawDesc
)

func file_cosmwasm_wasm_v1_proposal_proto_rawDescGZIP() []byte {
	file_cosmwasm_wasm_v1_proposal_proto_rawDescOnce.Do(func() {
		file_cosmwasm_wasm_v1_proposal_proto_rawDescData = protoimpl.X.CompressGZIP(file_cosmwasm_wasm_v1_proposal_proto_rawDescData)
	})
	return file_cosmwasm_wasm_v1_proposal_proto_rawDescData
}

var file_cosmwasm_wasm_v1_proposal_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_cosmwasm_wasm_v1_proposal_proto_goTypes = []interface{}{
	(*StoreCodeProposal)(nil),               // 0: cosmwasm.wasm.v1.StoreCodeProposal
	(*InstantiateContractProposal)(nil),     // 1: cosmwasm.wasm.v1.InstantiateContractProposal
	(*MigrateContractProposal)(nil),         // 2: cosmwasm.wasm.v1.MigrateContractProposal
	(*SudoContractProposal)(nil),            // 3: cosmwasm.wasm.v1.SudoContractProposal
	(*ExecuteContractProposal)(nil),         // 4: cosmwasm.wasm.v1.ExecuteContractProposal
	(*UpdateAdminProposal)(nil),             // 5: cosmwasm.wasm.v1.UpdateAdminProposal
	(*ClearAdminProposal)(nil),              // 6: cosmwasm.wasm.v1.ClearAdminProposal
	(*PinCodesProposal)(nil),                // 7: cosmwasm.wasm.v1.PinCodesProposal
	(*UnpinCodesProposal)(nil),              // 8: cosmwasm.wasm.v1.UnpinCodesProposal
	(*AccessConfigUpdate)(nil),              // 9: cosmwasm.wasm.v1.AccessConfigUpdate
	(*UpdateInstantiateConfigProposal)(nil), // 10: cosmwasm.wasm.v1.UpdateInstantiateConfigProposal
	(*AccessConfig)(nil),                    // 11: cosmwasm.wasm.v1.AccessConfig
	(*types.Coin)(nil),                      // 12: cosmos.base.v1beta1.Coin
}
var file_cosmwasm_wasm_v1_proposal_proto_depIdxs = []int32{
	11, // 0: cosmwasm.wasm.v1.StoreCodeProposal.instantiate_permission:type_name -> cosmwasm.wasm.v1.AccessConfig
	12, // 1: cosmwasm.wasm.v1.InstantiateContractProposal.funds:type_name -> cosmos.base.v1beta1.Coin
	12, // 2: cosmwasm.wasm.v1.ExecuteContractProposal.funds:type_name -> cosmos.base.v1beta1.Coin
	11, // 3: cosmwasm.wasm.v1.AccessConfigUpdate.instantiate_permission:type_name -> cosmwasm.wasm.v1.AccessConfig
	9,  // 4: cosmwasm.wasm.v1.UpdateInstantiateConfigProposal.access_config_updates:type_name -> cosmwasm.wasm.v1.AccessConfigUpdate
	5,  // [5:5] is the sub-list for method output_type
	5,  // [5:5] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_cosmwasm_wasm_v1_proposal_proto_init() }
func file_cosmwasm_wasm_v1_proposal_proto_init() {
	if File_cosmwasm_wasm_v1_proposal_proto != nil {
		return
	}
	file_cosmwasm_wasm_v1_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cosmwasm_wasm_v1_proposal_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreCodeProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmwasm_wasm_v1_proposal_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstantiateContractProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmwasm_wasm_v1_proposal_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MigrateContractProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmwasm_wasm_v1_proposal_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SudoContractProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmwasm_wasm_v1_proposal_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteContractProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmwasm_wasm_v1_proposal_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAdminProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmwasm_wasm_v1_proposal_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearAdminProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmwasm_wasm_v1_proposal_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PinCodesProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmwasm_wasm_v1_proposal_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnpinCodesProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmwasm_wasm_v1_proposal_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessConfigUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmwasm_wasm_v1_proposal_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInstantiateConfigProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cosmwasm_wasm_v1_proposal_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cosmwasm_wasm_v1_proposal_proto_goTypes,
		DependencyIndexes: file_cosmwasm_wasm_v1_proposal_proto_depIdxs,
		MessageInfos:      file_cosmwasm_wasm_v1_proposal_proto_msgTypes,
	}.Build()
	File_cosmwasm_wasm_v1_proposal_proto = out.File
	file_cosmwasm_wasm_v1_proposal_proto_rawDesc = nil
	file_cosmwasm_wasm_v1_proposal_proto_goTypes = nil
	file_cosmwasm_wasm_v1_proposal_proto_depIdxs = nil
}
