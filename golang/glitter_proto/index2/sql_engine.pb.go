// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0-devel
// 	protoc        v3.14.0
// source: index/sql_engine.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ColumnValueType int32

const (
	ColumnValueType_InvalidColumn ColumnValueType = 0
	ColumnValueType_IntColumn     ColumnValueType = 1
	ColumnValueType_UintColumn    ColumnValueType = 2
	ColumnValueType_FloatColumn   ColumnValueType = 3
	ColumnValueType_BoolColumn    ColumnValueType = 4
	ColumnValueType_StringColumn  ColumnValueType = 5
	ColumnValueType_BytesColumn   ColumnValueType = 6
)

// Enum value maps for ColumnValueType.
var (
	ColumnValueType_name = map[int32]string{
		0: "InvalidColumn",
		1: "IntColumn",
		2: "UintColumn",
		3: "FloatColumn",
		4: "BoolColumn",
		5: "StringColumn",
		6: "BytesColumn",
	}
	ColumnValueType_value = map[string]int32{
		"InvalidColumn": 0,
		"IntColumn":     1,
		"UintColumn":    2,
		"FloatColumn":   3,
		"BoolColumn":    4,
		"StringColumn":  5,
		"BytesColumn":   6,
	}
)

func (x ColumnValueType) Enum() *ColumnValueType {
	p := new(ColumnValueType)
	*p = x
	return p
}

func (x ColumnValueType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ColumnValueType) Descriptor() protoreflect.EnumDescriptor {
	return file_index_sql_engine_proto_enumTypes[0].Descriptor()
}

func (ColumnValueType) Type() protoreflect.EnumType {
	return &file_index_sql_engine_proto_enumTypes[0]
}

func (x ColumnValueType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ColumnValueType.Descriptor instead.
func (ColumnValueType) EnumDescriptor() ([]byte, []int) {
	return file_index_sql_engine_proto_rawDescGZIP(), []int{0}
}

type Argument_VarType int32

const (
	Argument_INT    Argument_VarType = 0
	Argument_UINT   Argument_VarType = 1
	Argument_FLOAT  Argument_VarType = 2
	Argument_BOOL   Argument_VarType = 3
	Argument_STRING Argument_VarType = 4
	Argument_BYTES  Argument_VarType = 5
)

// Enum value maps for Argument_VarType.
var (
	Argument_VarType_name = map[int32]string{
		0: "INT",
		1: "UINT",
		2: "FLOAT",
		3: "BOOL",
		4: "STRING",
		5: "BYTES",
	}
	Argument_VarType_value = map[string]int32{
		"INT":    0,
		"UINT":   1,
		"FLOAT":  2,
		"BOOL":   3,
		"STRING": 4,
		"BYTES":  5,
	}
)

func (x Argument_VarType) Enum() *Argument_VarType {
	p := new(Argument_VarType)
	*p = x
	return p
}

func (x Argument_VarType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Argument_VarType) Descriptor() protoreflect.EnumDescriptor {
	return file_index_sql_engine_proto_enumTypes[1].Descriptor()
}

func (Argument_VarType) Type() protoreflect.EnumType {
	return &file_index_sql_engine_proto_enumTypes[1]
}

func (x Argument_VarType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Argument_VarType.Descriptor instead.
func (Argument_VarType) EnumDescriptor() ([]byte, []int) {
	return file_index_sql_engine_proto_rawDescGZIP(), []int{0, 0}
}

type Argument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// variable type
	Type Argument_VarType `protobuf:"varint,1,opt,name=type,proto3,enum=blockved.glitterchain.index.Argument_VarType" json:"type,omitempty"`
	// variable value
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Argument) Reset() {
	*x = Argument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_sql_engine_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Argument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Argument) ProtoMessage() {}

func (x *Argument) ProtoReflect() protoreflect.Message {
	mi := &file_index_sql_engine_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Argument.ProtoReflect.Descriptor instead.
func (*Argument) Descriptor() ([]byte, []int) {
	return file_index_sql_engine_proto_rawDescGZIP(), []int{0}
}

func (x *Argument) GetType() Argument_VarType {
	if x != nil {
		return x.Type
	}
	return Argument_INT
}

func (x *Argument) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type RowData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Columns []string `protobuf:"bytes,1,rep,name=columns,proto3" json:"columns,omitempty"`
}

func (x *RowData) Reset() {
	*x = RowData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_sql_engine_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RowData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RowData) ProtoMessage() {}

func (x *RowData) ProtoReflect() protoreflect.Message {
	mi := &file_index_sql_engine_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RowData.ProtoReflect.Descriptor instead.
func (*RowData) Descriptor() ([]byte, []int) {
	return file_index_sql_engine_proto_rawDescGZIP(), []int{1}
}

func (x *RowData) GetColumns() []string {
	if x != nil {
		return x.Columns
	}
	return nil
}

type ResultSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ColumnDefs []*ColumnDef `protobuf:"bytes,2,rep,name=column_defs,json=columnDefs,proto3" json:"column_defs,omitempty"`
	Rows       []*RowData   `protobuf:"bytes,3,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *ResultSet) Reset() {
	*x = ResultSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_sql_engine_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultSet) ProtoMessage() {}

func (x *ResultSet) ProtoReflect() protoreflect.Message {
	mi := &file_index_sql_engine_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultSet.ProtoReflect.Descriptor instead.
func (*ResultSet) Descriptor() ([]byte, []int) {
	return file_index_sql_engine_proto_rawDescGZIP(), []int{2}
}

func (x *ResultSet) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ResultSet) GetColumnDefs() []*ColumnDef {
	if x != nil {
		return x.ColumnDefs
	}
	return nil
}

func (x *ResultSet) GetRows() []*RowData {
	if x != nil {
		return x.Rows
	}
	return nil
}

type ColumnDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ColumnName      string          `protobuf:"bytes,1,opt,name=column_name,json=columnName,proto3" json:"column_name,omitempty"`
	ColumnType      string          `protobuf:"bytes,2,opt,name=column_type,json=columnType,proto3" json:"column_type,omitempty"`
	Comment         string          `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	ColumnValueType ColumnValueType `protobuf:"varint,4,opt,name=column_value_type,json=columnValueType,proto3,enum=blockved.glitterchain.index.ColumnValueType" json:"column_value_type,omitempty"`
}

func (x *ColumnDef) Reset() {
	*x = ColumnDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_sql_engine_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColumnDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnDef) ProtoMessage() {}

func (x *ColumnDef) ProtoReflect() protoreflect.Message {
	mi := &file_index_sql_engine_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnDef.ProtoReflect.Descriptor instead.
func (*ColumnDef) Descriptor() ([]byte, []int) {
	return file_index_sql_engine_proto_rawDescGZIP(), []int{3}
}

func (x *ColumnDef) GetColumnName() string {
	if x != nil {
		return x.ColumnName
	}
	return ""
}

func (x *ColumnDef) GetColumnType() string {
	if x != nil {
		return x.ColumnType
	}
	return ""
}

func (x *ColumnDef) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *ColumnDef) GetColumnValueType() ColumnValueType {
	if x != nil {
		return x.ColumnValueType
	}
	return ColumnValueType_InvalidColumn
}

type IndexDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndexName    string       `protobuf:"bytes,1,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	IndexType    string       `protobuf:"bytes,2,opt,name=index_type,json=indexType,proto3" json:"index_type,omitempty"`
	Columns      []*ColumnDef `protobuf:"bytes,4,rep,name=columns,proto3" json:"columns,omitempty"`
	IsPrimaryKey bool         `protobuf:"varint,5,opt,name=is_primary_key,json=isPrimaryKey,proto3" json:"is_primary_key,omitempty"`
	Parser       string       `protobuf:"bytes,6,opt,name=parser,proto3" json:"parser,omitempty"`
	Comment      string       `protobuf:"bytes,7,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *IndexDef) Reset() {
	*x = IndexDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_sql_engine_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexDef) ProtoMessage() {}

func (x *IndexDef) ProtoReflect() protoreflect.Message {
	mi := &file_index_sql_engine_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexDef.ProtoReflect.Descriptor instead.
func (*IndexDef) Descriptor() ([]byte, []int) {
	return file_index_sql_engine_proto_rawDescGZIP(), []int{4}
}

func (x *IndexDef) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

func (x *IndexDef) GetIndexType() string {
	if x != nil {
		return x.IndexType
	}
	return ""
}

func (x *IndexDef) GetColumns() []*ColumnDef {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *IndexDef) GetIsPrimaryKey() bool {
	if x != nil {
		return x.IsPrimaryKey
	}
	return false
}

func (x *IndexDef) GetParser() string {
	if x != nil {
		return x.Parser
	}
	return ""
}

func (x *IndexDef) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type TableInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName       string         `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	DbName          string         `protobuf:"bytes,2,opt,name=db_name,json=dbName,proto3" json:"db_name,omitempty"`
	Engine          string         `protobuf:"bytes,3,opt,name=engine,proto3" json:"engine,omitempty"`
	Columns         []*ColumnDef   `protobuf:"bytes,4,rep,name=columns,proto3" json:"columns,omitempty"`
	Indexes         []*IndexDef    `protobuf:"bytes,5,rep,name=indexes,proto3" json:"indexes,omitempty"`
	CreateStatement string         `protobuf:"bytes,6,opt,name=create_statement,json=createStatement,proto3" json:"create_statement,omitempty"`
	Comment         string         `protobuf:"bytes,7,opt,name=comment,proto3" json:"comment,omitempty"`
	Creator         string         `protobuf:"bytes,8,opt,name=creator,proto3" json:"creator,omitempty"`
	Members         []*TableMember `protobuf:"bytes,9,rep,name=members,proto3" json:"members,omitempty"`
}

func (x *TableInfo) Reset() {
	*x = TableInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_sql_engine_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableInfo) ProtoMessage() {}

func (x *TableInfo) ProtoReflect() protoreflect.Message {
	mi := &file_index_sql_engine_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableInfo.ProtoReflect.Descriptor instead.
func (*TableInfo) Descriptor() ([]byte, []int) {
	return file_index_sql_engine_proto_rawDescGZIP(), []int{5}
}

func (x *TableInfo) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *TableInfo) GetDbName() string {
	if x != nil {
		return x.DbName
	}
	return ""
}

func (x *TableInfo) GetEngine() string {
	if x != nil {
		return x.Engine
	}
	return ""
}

func (x *TableInfo) GetColumns() []*ColumnDef {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *TableInfo) GetIndexes() []*IndexDef {
	if x != nil {
		return x.Indexes
	}
	return nil
}

func (x *TableInfo) GetCreateStatement() string {
	if x != nil {
		return x.CreateStatement
	}
	return ""
}

func (x *TableInfo) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *TableInfo) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *TableInfo) GetMembers() []*TableMember {
	if x != nil {
		return x.Members
	}
	return nil
}

type TableMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid  string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Role string `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *TableMember) Reset() {
	*x = TableMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_sql_engine_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableMember) ProtoMessage() {}

func (x *TableMember) ProtoReflect() protoreflect.Message {
	mi := &file_index_sql_engine_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableMember.ProtoReflect.Descriptor instead.
func (*TableMember) Descriptor() ([]byte, []int) {
	return file_index_sql_engine_proto_rawDescGZIP(), []int{6}
}

func (x *TableMember) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *TableMember) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type DatabaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbName  string         `protobuf:"bytes,1,opt,name=db_name,json=dbName,proto3" json:"db_name,omitempty"`
	Creator string         `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
	Members []*TableMember `protobuf:"bytes,3,rep,name=members,proto3" json:"members,omitempty"`
}

func (x *DatabaseInfo) Reset() {
	*x = DatabaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_sql_engine_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseInfo) ProtoMessage() {}

func (x *DatabaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_index_sql_engine_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseInfo.ProtoReflect.Descriptor instead.
func (*DatabaseInfo) Descriptor() ([]byte, []int) {
	return file_index_sql_engine_proto_rawDescGZIP(), []int{7}
}

func (x *DatabaseInfo) GetDbName() string {
	if x != nil {
		return x.DbName
	}
	return ""
}

func (x *DatabaseInfo) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *DatabaseInfo) GetMembers() []*TableMember {
	if x != nil {
		return x.Members
	}
	return nil
}

var File_index_sql_engine_proto protoreflect.FileDescriptor

var file_index_sql_engine_proto_rawDesc = []byte{
	0x0a, 0x16, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x73, 0x71, 0x6c, 0x5f, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x76,
	0x65, 0x64, 0x2e, 0x67, 0x6c, 0x69, 0x74, 0x74, 0x65, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xad, 0x01, 0x0a, 0x08, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x41, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2d, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x76, 0x65, 0x64, 0x2e, 0x67, 0x6c, 0x69, 0x74,
	0x74, 0x65, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x41,
	0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x56, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x48, 0x0a, 0x07, 0x56,
	0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x4e, 0x54, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x55, 0x49, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x4c, 0x4f,
	0x41, 0x54, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x4f, 0x4f, 0x4c, 0x10, 0x03, 0x12, 0x0a,
	0x0a, 0x06, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x59,
	0x54, 0x45, 0x53, 0x10, 0x05, 0x22, 0x23, 0x0a, 0x07, 0x52, 0x6f, 0x77, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x22, 0x9e, 0x01, 0x0a, 0x09, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x47, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x5f, 0x64, 0x65, 0x66, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x76, 0x65, 0x64, 0x2e, 0x67, 0x6c, 0x69, 0x74, 0x74, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x44, 0x65, 0x66, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x65, 0x66,
	0x73, 0x12, 0x38, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x76, 0x65, 0x64, 0x2e, 0x67, 0x6c, 0x69, 0x74, 0x74,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x52, 0x6f,
	0x77, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0xc1, 0x01, 0x0a, 0x09,
	0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x65, 0x66, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x58, 0x0a, 0x11, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2c, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x76, 0x65, 0x64, 0x2e, 0x67, 0x6c, 0x69, 0x74,
	0x74, 0x65, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22,
	0xe2, 0x01, 0x0a, 0x08, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x44, 0x65, 0x66, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x76, 0x65, 0x64, 0x2e, 0x67, 0x6c, 0x69, 0x74, 0x74, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x44, 0x65, 0x66, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x24, 0x0a, 0x0e,
	0x69, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b,
	0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0x81, 0x03, 0x0a, 0x09, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x76, 0x65, 0x64, 0x2e, 0x67,
	0x6c, 0x69, 0x74, 0x74, 0x65, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x65, 0x66, 0x52, 0x07, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x73, 0x12, 0x3f, 0x0a, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x76, 0x65, 0x64,
	0x2e, 0x67, 0x6c, 0x69, 0x74, 0x74, 0x65, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x44, 0x65, 0x66, 0x52, 0x07, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x42, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x76, 0x65, 0x64,
	0x2e, 0x67, 0x6c, 0x69, 0x74, 0x74, 0x65, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x33, 0x0a, 0x0b, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x85, 0x01,
	0x0a, 0x0c, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17,
	0x0a, 0x07, 0x64, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x64, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x42, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x76, 0x65, 0x64, 0x2e, 0x67, 0x6c,
	0x69, 0x74, 0x74, 0x65, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x2a, 0x87, 0x01, 0x0a, 0x0f, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x6e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09,
	0x49, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x55,
	0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x46,
	0x6c, 0x6f, 0x61, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a,
	0x42, 0x6f, 0x6f, 0x6c, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x10, 0x05, 0x12, 0x0f,
	0x0a, 0x0b, 0x42, 0x79, 0x74, 0x65, 0x73, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x10, 0x06, 0x42,
	0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x76, 0x65, 0x64, 0x2f, 0x67, 0x6c, 0x69, 0x74, 0x74, 0x65, 0x72, 0x2d, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x2f, 0x78, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_index_sql_engine_proto_rawDescOnce sync.Once
	file_index_sql_engine_proto_rawDescData = file_index_sql_engine_proto_rawDesc
)

func file_index_sql_engine_proto_rawDescGZIP() []byte {
	file_index_sql_engine_proto_rawDescOnce.Do(func() {
		file_index_sql_engine_proto_rawDescData = protoimpl.X.CompressGZIP(file_index_sql_engine_proto_rawDescData)
	})
	return file_index_sql_engine_proto_rawDescData
}

var file_index_sql_engine_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_index_sql_engine_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_index_sql_engine_proto_goTypes = []interface{}{
	(ColumnValueType)(0),  // 0: blockved.glitterchain.index.ColumnValueType
	(Argument_VarType)(0), // 1: blockved.glitterchain.index.Argument.VarType
	(*Argument)(nil),      // 2: blockved.glitterchain.index.Argument
	(*RowData)(nil),       // 3: blockved.glitterchain.index.RowData
	(*ResultSet)(nil),     // 4: blockved.glitterchain.index.ResultSet
	(*ColumnDef)(nil),     // 5: blockved.glitterchain.index.ColumnDef
	(*IndexDef)(nil),      // 6: blockved.glitterchain.index.IndexDef
	(*TableInfo)(nil),     // 7: blockved.glitterchain.index.TableInfo
	(*TableMember)(nil),   // 8: blockved.glitterchain.index.TableMember
	(*DatabaseInfo)(nil),  // 9: blockved.glitterchain.index.DatabaseInfo
}
var file_index_sql_engine_proto_depIdxs = []int32{
	1, // 0: blockved.glitterchain.index.Argument.type:type_name -> blockved.glitterchain.index.Argument.VarType
	5, // 1: blockved.glitterchain.index.ResultSet.column_defs:type_name -> blockved.glitterchain.index.ColumnDef
	3, // 2: blockved.glitterchain.index.ResultSet.rows:type_name -> blockved.glitterchain.index.RowData
	0, // 3: blockved.glitterchain.index.ColumnDef.column_value_type:type_name -> blockved.glitterchain.index.ColumnValueType
	5, // 4: blockved.glitterchain.index.IndexDef.columns:type_name -> blockved.glitterchain.index.ColumnDef
	5, // 5: blockved.glitterchain.index.TableInfo.columns:type_name -> blockved.glitterchain.index.ColumnDef
	6, // 6: blockved.glitterchain.index.TableInfo.indexes:type_name -> blockved.glitterchain.index.IndexDef
	8, // 7: blockved.glitterchain.index.TableInfo.members:type_name -> blockved.glitterchain.index.TableMember
	8, // 8: blockved.glitterchain.index.DatabaseInfo.members:type_name -> blockved.glitterchain.index.TableMember
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_index_sql_engine_proto_init() }
func file_index_sql_engine_proto_init() {
	if File_index_sql_engine_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_index_sql_engine_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Argument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_sql_engine_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RowData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_sql_engine_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_sql_engine_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColumnDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_sql_engine_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_sql_engine_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_sql_engine_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_sql_engine_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_index_sql_engine_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_index_sql_engine_proto_goTypes,
		DependencyIndexes: file_index_sql_engine_proto_depIdxs,
		EnumInfos:         file_index_sql_engine_proto_enumTypes,
		MessageInfos:      file_index_sql_engine_proto_msgTypes,
	}.Build()
	File_index_sql_engine_proto = out.File
	file_index_sql_engine_proto_rawDesc = nil
	file_index_sql_engine_proto_goTypes = nil
	file_index_sql_engine_proto_depIdxs = nil
}
